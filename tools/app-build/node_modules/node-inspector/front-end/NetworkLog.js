/*
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

WebInspector.NetworkLog=function(){this._requests=[],this._requestForId={},WebInspector.networkManager.addEventListener(WebInspector.NetworkManager.EventTypes.RequestStarted,this._onRequestStarted,this),WebInspector.resourceTreeModel.addEventListener(WebInspector.ResourceTreeModel.EventTypes.MainFrameNavigated,this._onMainFrameNavigated,this),WebInspector.resourceTreeModel.addEventListener(WebInspector.ResourceTreeModel.EventTypes.Load,this._onLoad,this),WebInspector.resourceTreeModel.addEventListener(WebInspector.ResourceTreeModel.EventTypes.DOMContentLoaded,this._onDOMContentLoaded,this)},WebInspector.NetworkLog.prototype={get requests(){return this._requests},requestForURL:function(e){for(var t=0;t<this._requests.length;++t)if(this._requests[t].url===e)return this._requests[t];return null},pageLoadForRequest:function(e){return e.__page},_onMainFrameNavigated:function(e){var t=e.data;this._currentPageLoad=null;var n=this._requests.splice(0,this._requests.length);this._requestForId={};for(var r=0;r<n.length;++r){var i=n[r];i.loaderId===t.loaderId&&(this._currentPageLoad||(this._currentPageLoad=new WebInspector.PageLoad(i)),this._requests.push(i),this._requestForId[i.requestId]=i,i.__page=this._currentPageLoad)}},_onRequestStarted:function(e){var t=e.data;this._requests.push(t),this._requestForId[t.requestId]=t,t.__page=this._currentPageLoad},_onDOMContentLoaded:function(e){this._currentPageLoad&&(this._currentPageLoad.contentLoadTime=e.data)},_onLoad:function(e){this._currentPageLoad&&(this._currentPageLoad.loadTime=e.data)},requestForId:function(e){return this._requestForId[e]}},WebInspector.networkLog=null,WebInspector.PageLoad=function(e){this.id=++WebInspector.PageLoad._lastIdentifier,this.url=e.url,this.startTime=e.startTime},WebInspector.PageLoad._lastIdentifier=0;