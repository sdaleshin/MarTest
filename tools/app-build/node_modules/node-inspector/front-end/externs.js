/*
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

function postMessage(e){}function WebKitMutation(e){this.type="",this.target=null,this.addedNodes=[],this.removedNodes=[]}function WebKitMutationObserver(e){}function addEventListener(e,t,n){}function DOMFileSystem(){}function InspectorFrontendHostAPI(){}function SourceMapV3(){this.version,this.file,this.sources,this.sections,this.mappings,this.sourceRoot}function AuditCategory(){}function AuditResult(){}function EventSink(){}function ExtensionSidebarPane(){}function Panel(){}function PanelWithSidebar(){}function Request(){}function Resource(){}function Timeline(){}function ExtensionDescriptor(){this.startPage="",this.name=""}function ExtensionReloadOptions(){this.ignoreCache=!1,this.injectedScript="",this.preprocessingScript="",this.userAgent=""}function buildPlatformExtensionAPI(e){}var console={};console.warn=function(e){},console.assert=function(e){},console.error=function(e){},console.trace=function(){},Event.prototype.isMetaOrCtrlForTest=!1,Event.prototype.initWebKitWheelEvent=function(e){},Event.prototype.stopImmediatePropagation=function(){},window.KeyboardEvent=function(e,t){},window.getComputedStyle=function(e){},window.testRunner=null,WebKitMutationObserver.prototype.observe=function(e,t){},WebKitMutationObserver.prototype.disconnect=function(){},Array.prototype.remove=function(e,t){},Array.prototype.keySet=function(){},Array.prototype.rotate=function(e){},Array.prototype.lowerBound=function(e,t){},Array.prototype.upperBound=function(e,t){},Array.prototype.binaryIndexOf=function(e,t){},Array.prototype.sortRange=function(e,t,n,r){},Array.prototype.partition=function(e,t,n,r){},Array.prototype.qselect=function(e,t){},Array.prototype.select=function(e){},Array.prototype.peekLast=function(){},DOMApplicationCache.prototype.UNCACHED=0,DOMApplicationCache.prototype.IDLE=1,DOMApplicationCache.prototype.CHECKING=2,DOMApplicationCache.prototype.DOWNLOADING=3,DOMApplicationCache.prototype.UPDATEREADY=4,DOMApplicationCache.prototype.OBSOLETE=5,DOMFileSystem.prototype.root=null,Range.prototype.startContainer;var InspectorBackend={};InspectorBackend.runAfterPendingDispatches=function(e){},InspectorFrontendHostAPI.prototype.platform=function(){},InspectorFrontendHostAPI.prototype.port=function(){},InspectorFrontendHostAPI.prototype.bringToFront=function(){},InspectorFrontendHostAPI.prototype.closeWindow=function(){},InspectorFrontendHostAPI.prototype.requestSetDockSide=function(e){},InspectorFrontendHostAPI.prototype.setAttachedWindowHeight=function(e){},InspectorFrontendHostAPI.prototype.moveWindowBy=function(e,t){},InspectorFrontendHostAPI.prototype.setInjectedScriptForOrigin=function(e,t){},InspectorFrontendHostAPI.prototype.loaded=function(){},InspectorFrontendHostAPI.prototype.localizedStringsURL=function(){},InspectorFrontendHostAPI.prototype.inspectedURLChanged=function(e){},InspectorFrontendHostAPI.prototype.documentCopy=function(e){},InspectorFrontendHostAPI.prototype.copyText=function(e){},InspectorFrontendHostAPI.prototype.openInNewTab=function(e){},InspectorFrontendHostAPI.prototype.canSave=function(){},InspectorFrontendHostAPI.prototype.save=function(e,t,n){},InspectorFrontendHostAPI.prototype.close=function(e){},InspectorFrontendHostAPI.prototype.append=function(e,t){},InspectorFrontendHostAPI.prototype.sendMessageToBackend=function(e){},InspectorFrontendHostAPI.prototype.sendMessageToEmbedder=function(e){},InspectorFrontendHostAPI.prototype.recordActionTaken=function(e){},InspectorFrontendHostAPI.prototype.recordPanelShown=function(e){},InspectorFrontendHostAPI.prototype.recordSettingChanged=function(e){},InspectorFrontendHostAPI.prototype.loadResourceSynchronously=function(e){},InspectorFrontendHostAPI.prototype.supportsFileSystems=function(){},InspectorFrontendHostAPI.prototype.requestFileSystems=function(){},InspectorFrontendHostAPI.prototype.addFileSystem=function(){},InspectorFrontendHostAPI.prototype.removeFileSystem=function(e){},InspectorFrontendHostAPI.prototype.isolatedFileSystem=function(e,t){},InspectorFrontendHostAPI.prototype.indexPath=function(e,t){},InspectorFrontendHostAPI.prototype.stopIndexing=function(e){},InspectorFrontendHostAPI.prototype.searchInPath=function(e,t,n){},InspectorFrontendHostAPI.prototype.setZoomFactor=function(e){};var InspectorFrontendHost;SourceMapV3.Section=function(){this.map,this.offset},SourceMapV3.Offset=function(){this.line,this.column};var WebInspector={};WebInspector.queryParamsObject={},WebInspector.toggleSearchingForNode=function(){},WebInspector.panels={},WebInspector.showViewInDrawer=function(e,t,n){},WebInspector.closeViewInDrawer=function(){},WebInspector.log=function(e,t,n){},WebInspector.showErrorMessage=function(e){},WebInspector.addMainEventListeners=function(e){},WebInspector.openResource=function(e,t){},WebInspector.showConsole=function(){},WebInspector.evaluateInConsole=function(e,t){},WebInspector.queryParamsObject={},WebInspector.showAnchorLocation=function(e){},WebInspector.Events={InspectorLoaded:"InspectorLoaded",InspectorClosing:"InspectorClosing"},WebInspector.settingsController;var extensionServer;Location.prototype.origin="",WebInspector.showPanel=function(e){},WebInspector.inspectedPageDomain,WebInspector.SourceJavaScriptTokenizer={},WebInspector.SourceJavaScriptTokenizer.Keywords={};var InspectorTest={},difflib={};difflib.stringAsLines=function(e){return[]},difflib.SequenceMatcher=function(e,t){},difflib.SequenceMatcher.prototype.get_opcodes=function(){return[]};var CodeMirror=function(){};CodeMirror.on=function(e,t,n){},CodeMirror.prototype={addKeyMap:function(e){},addLineClass:function(e,t,n){},addLineWidget:function(e,t,n){},addOverlay:function(e,t){},addWidget:function(e,t,n,r,i){},charCoords:function(e,t){},clearGutter:function(e){},clearHistory:function(){},clipPos:function(e){},coordsChar:function(e,t){},cursorCoords:function(e,t){},defaultCharWidth:function(){},defaultTextHeight:function(){},deleteH:function(e,t){},eachLine:function(e,t,n){},execCommand:function(e){},extendSelection:function(e,t){},findMarksAt:function(e){},findMatchingBracket:function(){},findPosH:function(e,t,n,r){},findPosV:function(e,t,n,r){},firstLine:function(){},focus:function(){},getAllMarks:function(){},getCursor:function(e){},getDoc:function(){},getGutterElement:function(){},getHistory:function(){},getInputField:function(){},getLine:function(e){},getLineHandle:function(e){},getLineNumber:function(e){},getMode:function(){},getOption:function(e){},getRange:function(e,t,n){},getScrollInfo:function(){},getScrollerElement:function(){},getSelection:function(){},getStateAfter:function(e){},getTokenAt:function(e){},getValue:function(e){},getViewport:function(){},getWrapperElement:function(){},hasFocus:function(){},historySize:function(){},indentLine:function(e,t,n){},indentSelection:function(e){},indexFromPos:function(e){},isClean:function(){},iterLinkedDocs:function(e){},lastLine:function(){},lineCount:function(){},lineInfo:function(e){},lineAtHeight:function(e,t){},linkedDoc:function(e){},markClean:function(){},markText:function(e,t,n){},moveH:function(e,t){},moveV:function(e,t){},off:function(e,t){},on:function(e,t){},operation:function(e){},posFromIndex:function(e){},redo:function(){},refresh:function(){},removeKeyMap:function(e){},removeLine:function(e){},removeLineClass:function(e,t,n){},removeLineWidget:function(e){},removeOverlay:function(e){},replaceRange:function(e,t,n,r){},replaceSelection:function(e,t,n){},scrollIntoView:function(e,t){},scrollTo:function(e,t){},setBookmark:function(e,t){},setCursor:function(e,t,n){},setExtending:function(e){},setGutterMarker:function(e,t,n){},setHistory:function(e){},setLine:function(e,t){},setOption:function(e,t){},setSelection:function(e,t){},setSize:function(e,t){},setValue:function(e){},somethingSelected:function(){},swapDoc:function(e){},undo:function(){},unlinkDoc:function(e){}},CodeMirror.prototype.lineCount,CodeMirror.Pass,CodeMirror.showHint=function(e,t){},CodeMirror.commands={},CodeMirror.modes={},CodeMirror.mimeModes={},CodeMirror.getMode=function(e,t){},CodeMirror.overlayMode=function(e,t,n){},CodeMirror.defineMode=function(e,t){},CodeMirror.startState=function(e){},CodeMirror.Pos=function(e,t){},CodeMirror.Pos.prototype.line,CodeMirror.Pos.prototype.ch,CodeMirror.StringStream=function(e){this.pos=0,this.start=0},CodeMirror.StringStream.prototype={backUp:function(e){},column:function(){},current:function(){},eat:function(e){},eatSpace:function(){},eatWhile:function(e){},eol:function(){},indentation:function(){},match:function(e,t,n){},next:function(){},peek:function(){},skipTo:function(e){},skipToEnd:function(){},sol:function(){}},CodeMirror.keyMap,WebInspector.suggestReload=function(){},WebInspector.reload=function(){},WebInspector.settings.continuousPainting={},WebInspector.settings.showDebugBorders={},WebInspector.settings.showScrollBottleneckRects={},WebInspector.settings.forceCompositingMode={},WebInspector.settings.showFPSCounter={},WebInspector.settings.showPaintRects={},window.dispatchStandaloneTestRunnerMessages;