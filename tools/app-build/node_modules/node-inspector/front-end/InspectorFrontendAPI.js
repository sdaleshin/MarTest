/*
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var InspectorFrontendAPI={_pendingCommands:[],setAttachedWindow:function(e){},setDockSide:function(e){WebInspector.dockController&&WebInspector.dockController.setDockSide(e)},showConsole:function(){WebInspector.showPanel("console")},showMainResourceForFrame:function(e){},showResources:function(){WebInspector.showPanel("resources")},setDockingUnavailable:function(e){WebInspector.setDockingUnavailable(e)},enterInspectElementMode:function(){WebInspector.showPanel("elements"),WebInspector.inspectElementModeController&&WebInspector.inspectElementModeController.toggleSearch()},fileSystemsLoaded:function(e){WebInspector.isolatedFileSystemDispatcher.fileSystemsLoaded(e)},fileSystemRemoved:function(e){WebInspector.isolatedFileSystemDispatcher.fileSystemRemoved(e)},fileSystemAdded:function(e,t){WebInspector.isolatedFileSystemDispatcher.fileSystemAdded(e,t)},indexingTotalWorkCalculated:function(e,t,n){var r=WebInspector.fileSystemWorkspaceProvider.delegate(t);r.indexingTotalWorkCalculated(e,n)},indexingWorked:function(e,t,n){var r=WebInspector.fileSystemWorkspaceProvider.delegate(t);r.indexingWorked(e,n)},indexingDone:function(e,t){var n=WebInspector.fileSystemWorkspaceProvider.delegate(t);n.indexingDone(e)},searchCompleted:function(e,t,n){var r=WebInspector.fileSystemWorkspaceProvider.delegate(t);r.searchCompleted(e,n)},savedURL:function(e){WebInspector.fileManager.savedURL(e)},appendedToURL:function(e){WebInspector.fileManager.appendedToURL(e)},setToolbarColors:function(e,t){WebInspector.setToolbarColors(e,t)},evaluateForTest:function(e,t){WebInspector.evaluateForTestInFrontend(e,t)},dispatch:function(e){if(InspectorFrontendAPI._isLoaded){var t=e.shift();return InspectorFrontendAPI[t].apply(InspectorFrontendAPI,e)}InspectorFrontendAPI._pendingCommands.push(e)},dispatchQueryParameters:function(){"dispatch"in WebInspector.queryParamsObject&&InspectorFrontendAPI.dispatch(JSON.parse(window.decodeURI(WebInspector.queryParamsObject.dispatch)))},loadTimelineFromURL:function(e){WebInspector.showPanel("timeline").loadFromURL(e)},loadCompleted:function(){InspectorFrontendAPI._isLoaded=!0;for(var e=0;e<InspectorFrontendAPI._pendingCommands.length;++e)InspectorFrontendAPI.dispatch(InspectorFrontendAPI._pendingCommands[e]);InspectorFrontendAPI._pendingCommands=[],window.opener&&window.opener.postMessage(["loadCompleted"],"*")},contextMenuItemSelected:function(e){WebInspector.contextMenuItemSelected(e)},contextMenuCleared:function(){WebInspector.contextMenuCleared()},dispatchMessageAsync:function(e){WebInspector.dispatch(e)},dispatchMessage:function(e){InspectorBackend.dispatch(e)}};if(window.opener&&window.dispatchStandaloneTestRunnerMessages){function onMessageFromOpener(e){e.source===window.opener&&InspectorFrontendAPI.dispatch(e.data)}window.addEventListener("message",onMessageFromOpener,!0)};