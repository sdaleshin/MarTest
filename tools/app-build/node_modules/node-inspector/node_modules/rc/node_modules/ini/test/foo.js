var i=require("../"),tap=require("tap"),test=tap.test,fs=require("fs"),path=require("path"),fixture=path.resolve(__dirname,"./fixtures/foo.ini"),data=fs.readFileSync(fixture,"utf8"),d,expectE='o = p\na with spaces = b  c\n" xa  n          p " = "\\"\\r\\nyoyoyo\\r\\r\\n"\n"[disturbing]" = hey you never know\nzr[] = deedee\nar[] = one\nar[] = three\nar[] = this is included\nbr = warm\n\n[a]\nav = a val\ne = { o: p, a: { av: a val, b: { c: { e: "this [value]" } } } }\nj = "\\"{ o: \\"p\\", a: { av: \\"a val\\", b: { c: { e: \\"this [value]\\" } } } }\\""\n"[]" = a square?\ncr[] = four\ncr[] = eight\n\n[a.b.c]\ne = 1\nj = 2\n\n[x\\.y\\.z]\nx.y.z = xyz\n\n[x\\.y\\.z.a\\.b\\.c]\na.b.c = abc\nnocomment = this\\; this is not a comment\n',expectD={o:"p","a with spaces":"b  c"," xa  n          p ":'"\r\nyoyoyo\r\r\n',"[disturbing]":"hey you never know",zr:["deedee"],ar:["one","three","this is included"],br:"warm",a:{av:"a val",e:'{ o: p, a: { av: a val, b: { c: { e: "this [value]" } } } }',j:'"{ o: "p", a: { av: "a val", b: { c: { e: "this [value]" } } } }"',"[]":"a square?",cr:["four","eight"],b:{c:{e:"1",j:"2"}}},"x.y.z":{"x.y.z":"xyz","a.b.c":{"a.b.c":"abc",nocomment:"this; this is not a comment"}}};test("decode from file",function(e){var t=i.decode(data);e.deepEqual(t,expectD),e.end()}),test("encode from data",function(e){var t=i.encode(expectD);e.deepEqual(t,expectE);var n={log:{type:"file",level:{label:"debug",value:10}}};t=i.encode(n),e.notEqual(t.slice(0,1),"\n","Never a blank first line"),e.notEqual(t.slice(-2),"\n\n","Never a blank final line"),e.end()});