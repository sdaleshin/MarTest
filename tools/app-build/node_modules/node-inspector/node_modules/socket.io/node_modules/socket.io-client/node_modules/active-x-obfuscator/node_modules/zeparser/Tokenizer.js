/*!
 * Tokenizer for JavaScript / ECMAScript 5
 * (c) Peter van der Zee, qfox.nl
 */

//if (this.regexAsciiIdentifier.test(c)) ++pos;

/*this.regexIdentifierStop.test(c)*/

function Tokenizer(e){this.inp=e||"",this.shadowInp=(e||"").replace(Tokenizer.regexNormalizeNewlines,"\n"),this.pos=0,this.line=0,this.column=0,this.cache={},this.errorStack=[],this.wtree=[],this.btree=[],this.regexLineTerminator=Tokenizer.regexLineTerminator,this.regexAsciiIdentifier=Tokenizer.regexAsciiIdentifier,this.hashAsciiIdentifier=Tokenizer.hashAsciiIdentifier,this.hashHex=Tokenizer.hashHex,this.regexUnicodeEscape=Tokenizer.regexUnicodeEscape,this.regexIdentifierStop=Tokenizer.regexIdentifierStop,this.hashIdentifierStop=Tokenizer.hashIdentifierStop,this.regexNumber=Tokenizer.regexNumber,this.regexNewline=Tokenizer.regexNewline,this.regexBig=Tokenizer.regexBig,this.regexBigAlt=Tokenizer.regexBigAlt,this.tokenCount=0,this.tokenCountNoWhite=0,this.Unicode=window.Unicode,this.errorEscape=null}if(typeof exports!="undefined"){var window={Unicode:require("./unicodecategories").Unicode};exports.Tokenizer=Tokenizer}Tokenizer.prototype={inp:null,shadowInp:null,pos:null,line:null,column:null,cache:null,errorStack:null,wtree:null,btree:null,regexLineTerminator:null,regexAsciiIdentifier:null,hashAsciiIdentifier:null,hashHex:null,regexUnicodeEscape:null,regexIdentifierStop:null,hashIdentifierStop:null,regexNumber:null,regexNewline:null,regexBig:null,regexBigAlt:null,tokenCount:null,tokenCountNoWhite:null,Unicode:null,storeCurrentAndFetchNextToken:function(e,t,n,r){var i=!e,s=this.pos,o=this.inp,u=this.shadowInp,a=!1;do{if(!r){++this.tokenCount,n.push(t);if(this.errorEscape)return t=this.errorEscape,this.errorEscape=null,t}r=!1;if(s>=o.length){t={start:o.length,stop:o.length,name:12};break}var t=null,f=s,l=o[s],c=o.substring(s,s+4),h=this.regexBig.exec(c);if(h[1])++s,t={start:f,stop:s,name:9,line:this.line,col:this.column,isWhite:!0},++this.column;else if(h[2]){var p=s+1;l=="\r"&&o[s+1]=="\n"&&++p,t={start:s,stop:p,name:10,line:this.line,col:this.column,isWhite:!0},s=p,a=!0,++this.line,this.column=0,t.hasNewline=1}else if(h[3])s=u.indexOf("\n",s),s==-1&&(s=o.length),t={start:f,stop:s,name:7,line:this.line,col:this.column,isComment:!0,isWhite:!0},this.column=t.stop;else if(h[4]){var d=o.indexOf("*/",s);if(d==-1)d=u.indexOf("\n",s),d<0?s+=2:s=d,t={start:f,stop:s,name:14,value:o.substring(f,s),line:this.line,col:this.column,isComment:!0,isWhite:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedMultiLineComment},this.errorStack.push(t);else{s=d+2,t={start:f,stop:s,name:8,value:o.substring(f,s),line:this.line,col:this.column,isComment:!0,isWhite:!0};var v=u.substring(f,s),m=0,g=0;while(m<(m=v.indexOf("\n",m+1)))++g;g?(a=!0,t.hasNewline=g,this.line+=g,this.column=0):this.column=t.stop}}else if(h[5]){var g=0;do{while(s<o.length&&o[++s]=="\\")u[s+1]=="\n"&&++g,++s;if(this.regexLineTerminator.test(o[s])){t={start:f,stop:s,name:14,value:o.substring(f,s),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedDoubleStringNewline},this.errorStack.push(t);break}}while(s<o.length&&o[s]!="'");t||(o[s]!="'"?(t={start:f,stop:s,name:14,value:o.substring(f,s),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedDoubleStringOther},this.errorStack.push(t)):(++s,t={start:f,stop:s,name:5,isPrimitive:!0,isString:!0},g?(t.hasNewline=g,this.line+=g,this.column=0):this.column+=s-f))}else if(h[6]){var g=0;do{while(s<o.length&&o[++s]=="\\")u[s+1]=="\n"&&++g,++s;if(this.regexLineTerminator.test(o[s])){t={start:f,stop:s,name:14,value:o.substring(f,s),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedSingleStringNewline},this.errorStack.push(t);break}}while(s<o.length&&o[s]!='"');t||(o[s]!='"'?(t={start:f,stop:s,name:14,value:o.substring(f,s),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedSingleStringOther},this.errorStack.push(t)):(++s,t={start:f,stop:s,name:6,isPrimitive:!0,isString:!0},g?(t.hasNewline=g,this.line+=g,this.column=0):this.column+=s-f))}else if(h[7]){var y=o.substring(s,s+30),b=y.match(this.regexNumber);if(b[2]){var w=b[2],E=w[0]=="0"&&w[1]&&w[1]!="e"&&w[1]!="E"&&w[1]!=".";E?(t={start:f,stop:s,name:14,isNumber:!0,isOctal:!0,tokenError:!0,error:Tokenizer.Error.IllegalOctalEscape,value:w},this.errorStack.push(t)):t={start:f,stop:f+w.length,name:4,isPrimitive:!0,isNumber:!0,value:w}}else{if(!b[1])throw"unexpected parser errror... regex fail :(";var w=b[1];t={start:f,stop:f+w.length,name:3,isPrimitive:!0,isNumber:!0,value:w}}if(w.length<300)s+=w.length;else{var S=this.oldNumberParser(s,l,o,t,f,Tokenizer);s=S[0],t=S[1]}}else if(i&&h[8]){var x=[],T=!1,N=[],C=null;while(++s<o.length){l=u[s];if(l=="\n"){t={start:f,stop:s,name:14,tokenError:!0,errorHasContent:!0,error:Tokenizer.Error.UnterminatedRegularExpressionNewline},this.errorStack.push(t);break}if(l=="/"){T=!0;break}if(l=="?"||l=="*"||l=="+")C=Tokenizer.Error.NothingToRepeat;else if(l=="^")o[s-1]!="/"&&o[s-1]!="|"&&o[s-1]!="("&&(o[s-3]!="("||o[s-2]!="?"||o[s-1]!=":"&&o[s-1]!="!"&&o[s-1]!="=")&&(C=Tokenizer.Error.StartOfMatchShouldBeAtStart);else if(l=="$")o[s+1]!="/"&&o[s+1]!="|"&&o[s+1]!=")"&&(C=Tokenizer.Error.DollarShouldBeEnd);else if(l=="}")C=Tokenizer.Error.MissingOpeningCurly;else{if(l=="(")N.push(s-f);else if(l==")")if(N.length==0)C={start:f,stop:s,name:14,tokenError:!0,error:Tokenizer.Error.RegexNoOpenGroups};else{var k=N.pop(),L=s-f;x[k]=L,x[L]=k}if(l=="["){var A=s-f;while(++s<o.length&&u[s]!="\n"&&o[s]!="]")if(o[s]=="\\"){if(u[s+1]=="\n")break;++s}if(o[s]!="]"){t={start:f,stop:s,name:14,tokenError:!0,error:Tokenizer.Error.ClosingClassRangeNotFound},this.errorStack.push(t);break}var O=s-f;x[A]=O,x[O]=A}else l=="\\"&&u[s+1]!="\n"&&++s;if(l=="(")o[s+1]=="?"&&(o[s+2]==":"||o[s+2]=="="||o[s+2]=="!")&&(s+=2);else if(o[s+1]=="?")++s;else if(o[s+1]=="*"||o[s+1]=="+")++s,o[s+1]=="?"&&++s;else if(o[s+1]=="{"){s+=1;var A=s-f;/[0-9]/.test(o[s+1])||(C=Tokenizer.Error.QuantifierRequiresNumber);while(++s<o.length&&/[0-9]/.test(o[s+1]));if(o[s+1]==","){++s;while(s<o.length&&/[0-9]/.test(o[s+1]))++s}if(o[s+1]!="}")C=Tokenizer.Error.QuantifierRequiresClosingCurly;else{++s;var O=s-f;x[A]=O,x[O]=A,o[s+1]=="?"&&++s}}}}if(!T||t)t||(t={start:f,stop:s,name:14,tokenError:!0,error:Tokenizer.Error.UnterminatedRegularExpressionOther},this.errorStack.push(t));else{do++s;while(s<o.length&&this.hashAsciiIdentifier[o[s]]);N.length?(N.length>0&&(t={start:f,stop:s,name:14,tokenError:!0,error:Tokenizer.Error.RegexOpenGroup}),this.errorStack.push(t)):C?(t={start:f,stop:s,name:14,errorHasContent:!0,tokenError:!0,error:C},this.errorStack.push(t)):t={start:f,stop:s,name:1,isPrimitive:!0}}t.twinfo=x}else{var M=h[8]||h[9];if(M)t={start:s,stop:s+=M.length,name:11,value:M};else{var T=!1;while(s<o.length){var _=o[s];if(this.hashAsciiIdentifier[_])++s;else if(_=="\\"&&this.regexUnicodeEscape.test(o.substring(s,s+6)))s+=6;else{if(!this.Unicode)break;if(this.hashIdentifierStop[_])break;var D=this.Unicode;if(!(D.Lu.test(_)||D.Ll.test(_)||D.Lt.test(_)||D.Lm.test(_)||D.Lo.test(_)||D.Nl.test(_)||D.Mn.test(_)||D.Mc.test(_)||D.Nd.test(_)||D.Pc.test(_)||D.sp.test(_)))break;++s}T=!0}if(T){t={start:f,stop:s,name:2,value:o.substring(f,s)};if(t.value=="undefined"||t.value=="null"||t.value=="true"||t.value=="false")t.isPrimitive=!0}else o[s]=="`"?(t={start:f,stop:s+1,name:14,tokenError:!0,error:Tokenizer.Error.BacktickNotSupported},this.errorStack.push(t)):o[s]=="\\"?o[s+1]=="u"?(t={start:f,stop:s+1,name:14,tokenError:!0,error:Tokenizer.Error.InvalidUnicodeEscape},this.errorStack.push(t)):(t={start:f,stop:s+1,name:14,tokenError:!0,error:Tokenizer.Error.InvalidBackslash},this.errorStack.push(t)):(t={start:f,stop:s+1,name:14,tokenError:!0,error:Tokenizer.Error.Unknown,value:_},this.errorStack.push(t)),++s}}t&&(t.tokposw=this.wtree.length,this.wtree.push(t),t.isWhite||(t.tokposb=this.btree.length,this.btree.push(t)))}while(n&&t&&t.isWhite);return++this.tokenCountNoWhite,this.pos=s,a&&(t.newline=!0),t},addTokenToStreamBefore:function(e,t){var n=this.wtree,r=this.btree;t.name==12?(e.tokposw=n.length,n.push(e),e.tokposb=r.length,r.push(e)):(e.tokposw=t.tokposw,n[e.tokposw]=e,t.tokposw+=1,n[t.tokposw]=t,t.tokposb&&(e.tokposb=t.tokposb,r[e.tokposb]=e,t.tokposb+=1,r[t.tokposb]=t))},oldNumberParser:function(e,t,n,r,i,s){++e;if(t!="0"||n[e]!="x"&&n[e]!="X"){var o=t=="0"&&n[e]>="0"&&n[e]<="9";if(t!="."){while(e<n.length&&n[e]>="0"&&n[e]<="9")++e;n[e]=="."&&++e}while(e<n.length&&n[e]>="0"&&n[e]<="9")++e;if(n[e]=="e"||n[e]=="E"){(n[++e]=="+"||n[e]=="-")&&++e;var u=e;while(e<n.length&&n[e]>="0"&&n[e]<="9")++e;u==e&&(r={start:i,stop:e,name:14,tokenError:!0,error:s.Error.NumberExponentRequiresDigits},this.errorStack.push(r))}r.name!=14&&(o?(r={start:i,stop:e,name:14,isNumber:!0,isOctal:!0,tokenError:!0,error:s.Error.IllegalOctalEscape},this.errorStack.push(r),console.log("foo")):r={start:i,stop:e,name:4,isPrimitive:!0,isNumber:!0})}else{while(++e<n.length&&this.hashHex[n[e]]);r={start:i,stop:e,name:3,isPrimitive:!0,isNumber:!0}}return[e,r]},tokens:function(e){e=e||[];var t=0,n,r=[];while((n=this.storeCurrentAndFetchNextToken(!e[t++],!1,!1,!0))&&n.name!=12)r.push(n);return r},fixValues:function(){this.wtree.forEach(function(e){e.value||(e.value=this.inp.substring(e.start,e.stop))},this)}},Tokenizer.escape=function(e){return e.replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\uFFFF/g,"\\uFFFF").replace(/\s/g,function(e){var t=e.charCodeAt(0).toString(16);switch(t.length){case 1:t="000"+t;break;case 2:t="00"+t;break;case 3:t="0"+t}return"\\u"+t})},Tokenizer.testSuite=function(e){var t=document.createElement("pre");document.body.appendChild(t);var n=function(){var e=document.createElement("div");return e.innerHTML=Array.prototype.slice.call(arguments).join(" "),t.appendChild(e),arguments[0]};n("Running test suite...",e.length,"tests"),n(" ");var r=+(new Date),i=0,s=0;for(var o=0;o<e.length;++o){var u=e[o],a,f=u[1],l=u[2],c=u[4]?u[3]:null,h=u[4]||u[3],a=(new Tokenizer(f)).tokens(c);a.length==l?(n('<span class="green">Test '+o+" ok:</span>",h),++i):(n('<b class="red">Test failed:</span>',h,"(found",a.length,"expected",l+")"),console.log(h,a),++s),n("<b>"+Tokenizer.escape(f)+"</b>"),n("<br/>")}n("Tokenizer test suite finished ("+(+(new Date)-r)+" ms). ok:"+i+", fail:"+s)},Tokenizer.regexWhiteSpace=/[ \t\u000B\u000C\u00A0\uFFFF]/,Tokenizer.regexLineTerminator=/[\u000A\u000D\u2028\u2029]/,Tokenizer.regexAsciiIdentifier=/[a-zA-Z0-9\$_]/,Tokenizer.hashAsciiIdentifier={_:1,$:1,a:1,b:1,c:1,d:1,e:1,f:1,g:1,h:1,i:1,j:1,k:1,l:1,m:1,n:1,o:1,p:1,q:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,y:1,z:1,A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,K:1,L:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1,0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1},Tokenizer.regexHex=/[0-9A-Fa-f]/,Tokenizer.hashHex={0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1,a:1,b:1,c:1,d:1,e:1,f:1,A:1,B:1,C:1,D:1,E:1,F:1},Tokenizer.regexUnicodeEscape=/u[0-9A-Fa-f]{4}/,Tokenizer.regexIdentifierStop=/[\>\=\!\|\<\+\-\&\*\%\^\/\{\}\(\)\[\]\.\;\,\~\?\:\ \t\n\\\'\"]/,Tokenizer.hashIdentifierStop={">":1,"=":1,"!":1,"|":1,"<":1,"+":1,"-":1,"&":1,"*":1,"%":1,"^":1,"/":1,"{":1,"}":1,"(":1,")":1,"[":1,"]":1,".":1,";":1,",":1,"~":1,"?":1,":":1,"\\":1,"'":1,'"':1," ":1,"	":1,"\n":1},Tokenizer.regexNewline=/\n/g,Tokenizer.Unidocde=window.Unicode,Tokenizer.regexNumber=/^(?:(0[xX][0-9A-Fa-f]+)|((?:(?:(?:(?:[0-9]+)(?:\.[0-9]*)?))|(?:\.[0-9]+))(?:[eE][-+]?[0-9]{1,})?))/,Tokenizer.regexNormalizeNewlines=/(\u000D[^\u000A])|[\u2028\u2029]/,Tokenizer.regexBig=/^([ \t\u000B\u000C\u00A0\uFFFF])?([\u000A\u000D\u2028\u2029])?(\/\/)?(\/\*)?(')?(")?(\.?[0-9])?(?:(\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\+\+|--|<<|>>|\&\&|\|\||\+=|-=|\*=|%=|\&=|\|=|\^=|\/=|\{|\}|\(|\)|\[|\]|\.|;|,|<|>|\+|-|\*|%|\||\&|\||\^|!|~|\?|:|=|\/)?/,Tokenizer.regexBigAlt=/([ \t\u000B\u000C\u00A0\uFFFF])?([\u000A\u000D\u2028\u2029])?(\/\/)?(\/\*)?(')?(")?(\.?[0-9])?(?:(\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\+\+|--|<<|>>|\&\&|\|\||\+=|-=|\*=|%=|\&=|\|=|\^=|\/=|\{|\}|\(|\)|\[|\]|\.|;|,|<|>|\+|-|\*|%|\||\&|\||\^|!|~|\?|:|=|\/)?/g,Tokenizer.Error={UnterminatedSingleStringNewline:{msg:"Newlines are not allowed in string literals"},UnterminatedSingleStringOther:{msg:"Unterminated single string"},UnterminatedDoubleStringNewline:{msg:"Newlines are not allowed in string literals"},UnterminatedDoubleStringOther:{msg:"Unterminated double string"},UnterminatedRegularExpressionNewline:{msg:"Newlines are not allowed in regular expressions"},NothingToRepeat:{msg:"Used a repeat character (*?+) in a regex without something prior to it to match"},ClosingClassRangeNotFound:{msg:"Unable to find ] for class range"},RegexOpenGroup:{msg:"Open group did not find closing parenthesis"},RegexNoOpenGroups:{msg:"Closing parenthesis found but no group open"},UnterminatedRegularExpressionOther:{msg:"Unterminated regular expression"},UnterminatedMultiLineComment:{msg:"Unterminated multi line comment"},UnexpectedIdentifier:{msg:"Unexpected identifier"},IllegalOctalEscape:{msg:"Octal escapes are not valid"},Unknown:{msg:"Unknown input"},NumberExponentRequiresDigits:{msg:"Numbers with exponents require at least one digit after the `e`"},BacktickNotSupported:{msg:"The backtick is not used in js, maybe you copy/pasted from a fancy site/doc?"},InvalidUnicodeEscape:{msg:"Encountered an invalid unicode escape, must be followed by exactly four hex numbers"},InvalidBackslash:{msg:"Encountered a backslash where it not allowed"},StartOfMatchShouldBeAtStart:{msg:"The ^ signifies the start of match but was not found at a start"},DollarShouldBeEnd:{msg:"The $ signifies the stop of match but was not found at a stop"},QuantifierRequiresNumber:{msg:"Quantifier curly requires at least one digit before the comma"},QuantifierRequiresClosingCurly:{msg:"Quantifier curly requires to be closed"},MissingOpeningCurly:{msg:"Encountered closing quantifier curly without seeing an opening curly"}};