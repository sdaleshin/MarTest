function getArrayBuffer(e){var t=e.length,n=new ArrayBuffer(t);for(var r=0;r<t;++r)n[r]=e[r];return n}function areArraysEqual(e,t){if(e.length!=t.length)return!1;for(var n=0,r=e.length;n<r;++n)if(e[n]!==t[n])return!1;return!0}var http=require("http"),https=require("https"),WebSocket=require("../"),WebSocketServer=WebSocket.Server,fs=require("fs"),should=require("should"),port=8e3;describe("WebSocketServer",function(){describe("#ctor",function(){it("throws an error if no option object is passed",function(){var e=!1;try{var t=new WebSocketServer}catch(n){e=!0}e.should.be.ok}),it("throws an error if no port or server is specified",function(){var e=!1;try{var t=new WebSocketServer({})}catch(n){e=!0}e.should.be.ok}),it("does not throw an error if no port or server is specified, when the noServer option is true",function(){var e=!1;try{var t=new WebSocketServer({noServer:!0})}catch(n){e=!0}e.should.eql(!1)}),it("emits an error if http server bind fails",function(e){var t=new WebSocketServer({port:1});t.on("error",function(){e()})}),it("starts a server on a given port",function(e){var t=new WebSocketServer({port:++port},function(){var e=new WebSocket("ws://localhost:"+port)});t.on("connection",function(n){t.close(),e()})}),it("uses a precreated http server",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({server:t}),r=new WebSocket("ws://localhost:"+port);n.on("connection",function(r){n.close(),t.close(),e()})})}),it("uses a precreated http server listening on unix socket",function(e){var t=http.createServer(),n="/tmp/ws_socket_"+(new Date).getTime()+"."+Math.floor(Math.random()*1e3);t.listen(n,function(){var r=new WebSocketServer({server:t}),i=new WebSocket("ws+unix://"+n);r.on("connection",function(n){r.close(),t.close(),e()})})}),it("emits path specific connection event",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({server:t}),r=new WebSocket("ws://localhost:"+port+"/endpointName");n.on("connection/endpointName",function(r){n.close(),t.close(),e()})})}),it("can have two different instances listening on the same http server with two different paths",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({server:t,path:"/wss1"}),r=new WebSocketServer({server:t,path:"/wss2"}),i=0;n.on("connection",function(r){n.close(),++i==2&&(t.close(),e())}),r.on("connection",function(n){r.close(),++i==2&&(t.close(),e())});var s=new WebSocket("ws://localhost:"+port+"/wss1"),o=new WebSocket("ws://localhost:"+port+"/wss2?foo=1")})}),it("cannot have two different instances listening on the same http server with the same path",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({server:t,path:"/wss1"});try{var r=new WebSocketServer({server:t,path:"/wss1"})}catch(i){n.close(),t.close(),e()}})})}),describe("#close",function(){it("will close all clients",function(e){var t=new WebSocketServer({port:++port},function(){var t=new WebSocket("ws://localhost:"+port);t.on("close",function(){++n==2&&e()})}),n=0;t.on("connection",function(r){r.on("close",function(){++n==2&&e()}),t.close()})}),it("does not close a precreated server",function(e){var t=http.createServer(),n=t.close;t.close=function(){should.fail("must not close pre-created server")},t.listen(++port,function(){var r=new WebSocketServer({server:t}),i=new WebSocket("ws://localhost:"+port);r.on("connection",function(i){r.close(),t.close=n,t.close(),e()})})}),it("cleans up websocket data on a precreated server",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({server:t,path:"/wss1"}),r=new WebSocketServer({server:t,path:"/wss2"});(typeof t._webSocketPaths).should.eql("object"),Object.keys(t._webSocketPaths).length.should.eql(2),n.close(),Object.keys(t._webSocketPaths).length.should.eql(1),r.close(),(typeof t._webSocketPaths).should.eql("undefined"),t.close(),e()})})}),describe("#clients",function(){it("returns a list of connected clients",function(e){var t=new WebSocketServer({port:++port},function(){t.clients.length.should.eql(0);var e=new WebSocket("ws://localhost:"+port)});t.on("connection",function(n){t.clients.length.should.eql(1),t.close(),e()})}),it("can be disabled",function(e){var t=new WebSocketServer({port:++port,clientTracking:!1},function(){t.clients.length.should.eql(0);var e=new WebSocket("ws://localhost:"+port)});t.on("connection",function(n){t.clients.length.should.eql(0),t.close(),e()})}),it("is updated when client terminates the connection",function(e){var t,n=new WebSocketServer({port:++port},function(){t=new WebSocket("ws://localhost:"+port)});n.on("connection",function(r){r.on("close",function(){n.clients.length.should.eql(0),n.close(),e()}),t.terminate()})}),it("is updated when client closes the connection",function(e){var t,n=new WebSocketServer({port:++port},function(){t=new WebSocket("ws://localhost:"+port)});n.on("connection",function(r){r.on("close",function(){n.clients.length.should.eql(0),n.close(),e()}),t.close()})})}),describe("#options",function(){it("exposes options passed to constructor",function(e){var t=new WebSocketServer({port:++port},function(){t.options.port.should.eql(port),t.close(),e()})})}),describe("#handleUpgrade",function(){it("can be used for a pre-existing server",function(e){var t=http.createServer();t.listen(++port,function(){var n=new WebSocketServer({noServer:!0});t.on("upgrade",function(e,t,r){n.handleUpgrade(e,t,r,function(e){e.send("hello")})});var r=new WebSocket("ws://localhost:"+port);r.on("message",function(r){r.should.eql("hello"),n.close(),t.close(),e()})})})}),describe("hybi mode",function(){describe("connection establishing",function(){it("does not accept connections with no sec-websocket-key",function(e){var t=new WebSocketServer({port:++port},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket"}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(400),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("does not accept connections with no sec-websocket-version",function(e){var t=new WebSocketServer({port:++port},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ=="}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(400),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("does not accept connections with invalid sec-websocket-version",function(e){var t=new WebSocketServer({port:++port},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":12}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(400),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("client can be denied",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!1}},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":8,"Sec-WebSocket-Origin":"http://foobar.com"}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(401),process.nextTick(function(){t.close(),e()})})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("client can be accepted",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!0}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,Origin:"http://foobar.com"}},t=http.request(e);t.end()});t.on("connection",function(n){n.terminate(),t.close(),e()}),t.on("error",function(){})}),it("verifyClient gets client origin",function(e){var t=!1,n=new WebSocketServer({port:++port,verifyClient:function(e){return e.origin.should.eql("http://foobarbaz.com"),t=!0,!1}},function(){var r={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,Origin:"http://foobarbaz.com"}},i=http.request(r);i.end(),i.on("response",function(r){t.should.be.ok,n.close(),e()})});n.on("error",function(){})}),it("verifyClient gets original request",function(e){var t=!1,n=new WebSocketServer({port:++port,verifyClient:function(e){return e.req.headers["sec-websocket-key"].should.eql("dGhlIHNhbXBsZSBub25jZQ=="),t=!0,!1}},function(){var r={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,Origin:"http://foobarbaz.com"}},i=http.request(r);i.end(),i.on("response",function(r){t.should.be.ok,n.close(),e()})});n.on("error",function(){})}),it("verifyClient has secure:true for ssl connections",function(e){var t={key:fs.readFileSync("test/fixtures/key.pem"),cert:fs.readFileSync("test/fixtures/certificate.pem")},n=https.createServer(t,function(e,t){t.writeHead(200),t.end()}),r=!1,i=new WebSocketServer({server:n,verifyClient:function(e){return r=e.secure===!0,!0}});n.listen(++port,function(){var e=new WebSocket("wss://localhost:"+port)}),i.on("connection",function(t){n.close(),t.terminate(),i.close(),r.should.be.ok,e()})}),it("verifyClient has secure:false for non-ssl connections",function(e){var t=http.createServer(function(e,t){t.writeHead(200),t.end()}),n=!1,r=new WebSocketServer({server:t,verifyClient:function(e){return n=e.secure===!1,!0}});t.listen(++port,function(){var e=new WebSocket("ws://localhost:"+port)}),r.on("connection",function(i){t.close(),i.terminate(),r.close(),n.should.be.ok,e()})}),it("client can be denied asynchronously",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e,t){process.nextTick(function(){t(!1)})}},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":8,"Sec-WebSocket-Origin":"http://foobar.com"}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(401),process.nextTick(function(){t.close(),e()})})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("client can be accepted asynchronously",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e,t){process.nextTick(function(){t(!0)})}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,Origin:"http://foobar.com"}},t=http.request(e);t.end()});t.on("connection",function(n){n.terminate(),t.close(),e()}),t.on("error",function(){})}),it("handles messages passed along with the upgrade request (upgrade head)",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!0}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,Origin:"http://foobar.com"}},t=http.request(e);t.write(new Buffer([129,5,72,101,108,108,111],"binary")),t.end()});t.on("connection",function(n){n.on("message",function(r){r.should.eql("Hello"),n.terminate(),t.close(),e()})}),t.on("error",function(){})}),it("selects the first protocol by default",function(e){var t=new WebSocketServer({port:++port},function(){var n=new WebSocket("ws://localhost:"+port,{protocol:"prot1, prot2"});n.on("open",function(r){n.protocol.should.eql("prot1"),t.close(),e()})})}),it("selects the last protocol via protocol handler",function(e){var t=new WebSocketServer({port:++port,handleProtocols:function(e,t){t(!0,e[e.length-1])}},function(){var n=new WebSocket("ws://localhost:"+port,{protocol:"prot1, prot2"});n.on("open",function(r){n.protocol.should.eql("prot2"),t.close(),e()})})}),it("client detects invalid server protocol",function(e){var t=new WebSocketServer({port:++port,handleProtocols:function(e,t){t(!0,"prot3")}},function(){var t=new WebSocket("ws://localhost:"+port,{protocol:"prot1, prot2"});t.on("open",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){e()})})}),it("client detects no server protocol",function(e){var t=new WebSocketServer({port:++port,handleProtocols:function(e,t){t(!0)}},function(){var t=new WebSocket("ws://localhost:"+port,{protocol:"prot1, prot2"});t.on("open",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){e()})})}),it("client refuses server protocols",function(e){var t=new WebSocketServer({port:++port,handleProtocols:function(e,t){t(!1)}},function(){var t=new WebSocket("ws://localhost:"+port,{protocol:"prot1, prot2"});t.on("open",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){e()})})}),it("server detects invalid protocol handler",function(e){var t=new WebSocketServer({port:++port,handleProtocols:function(e,t){}},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"websocket","Sec-WebSocket-Key":"dGhlIHNhbXBsZSBub25jZQ==","Sec-WebSocket-Version":13,"Sec-WebSocket-Origin":"http://foobar.com"}};n.port=port;var r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(501),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})})}),describe("messaging",function(){it("can send and receive data",function(e){var t=new Array(66560);for(var n=0;n<t.length;++n)t[n]=String.fromCharCode(65+~~(25*Math.random()));t=t.join("");var r=new WebSocketServer({port:++port},function(){var e=new WebSocket("ws://localhost:"+port);e.on("message",function(t,n){e.send(t)})});r.on("connection",function(n){n.on("message",function(n){n.should.eql(t),r.close(),e()}),n.send(t)})})})}),describe("hixie mode",function(){it("can be disabled",function(e){var t=new WebSocketServer({port:++port,disableHixie:!0},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},r=http.request(n);r.write("WjN}|M(6"),r.end(),r.on("response",function(n){n.statusCode.should.eql(401),process.nextTick(function(){t.close(),e()})})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),describe("connection establishing",function(){it("does not accept connections with no sec-websocket-key1",function(e){var t=new WebSocketServer({port:++port},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80"}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(400),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("does not accept connections with no sec-websocket-key2",function(e){var t=new WebSocketServer({port:++port},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},r=http.request(n);r.end(),r.on("response",function(n){n.statusCode.should.eql(400),t.close(),e()})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("accepts connections with valid handshake",function(e){var t=new WebSocketServer({port:++port},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},t=http.request(e);t.write("WjN}|M(6"),t.end()});t.on("connection",function(n){n.terminate(),t.close(),e()}),t.on("error",function(){})}),it("client can be denied",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!1}},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},r=http.request(n);r.write("WjN}|M(6"),r.end(),r.on("response",function(n){n.statusCode.should.eql(401),process.nextTick(function(){t.close(),e()})})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("client can be accepted",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!0}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},t=http.request(e);t.write("WjN}|M(6"),t.end()});t.on("connection",function(n){n.terminate(),t.close(),e()}),t.on("error",function(){})}),it("verifyClient gets client origin",function(e){var t=!1,n=new WebSocketServer({port:++port,verifyClient:function(e){return e.origin.should.eql("http://foobarbaz.com"),t=!0,!1}},function(){var r={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket",Origin:"http://foobarbaz.com","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},i=http.request(r);i.write("WjN}|M(6"),i.end(),i.on("response",function(r){t.should.be.ok,n.close(),e()})});n.on("error",function(){})}),it("verifyClient gets original request",function(e){var t=!1,n=new WebSocketServer({port:++port,verifyClient:function(e){return e.req.headers["sec-websocket-key1"].should.eql("3e6b263  4 17 80"),t=!0,!1}},function(){var r={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket",Origin:"http://foobarbaz.com","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},i=http.request(r);i.write("WjN}|M(6"),i.end(),i.on("response",function(r){t.should.be.ok,n.close(),e()})});n.on("error",function(){})}),it("client can be denied asynchronously",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e,t){t(!1)}},function(){var n={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket",Origin:"http://foobarbaz.com","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},r=http.request(n);r.write("WjN}|M(6"),r.end(),r.on("response",function(n){n.statusCode.should.eql(401),process.nextTick(function(){t.close(),e()})})});t.on("connection",function(t){e(new Error("connection must not be established"))}),t.on("error",function(){})}),it("client can be accepted asynchronously",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e,t){t(!0)}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket",Origin:"http://foobarbaz.com","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90"}},t=http.request(e);t.write("WjN}|M(6"),t.end()});t.on("connection",function(n){t.close(),e()}),t.on("error",function(){})}),it("handles messages passed along with the upgrade request (upgrade head)",function(e){var t=new WebSocketServer({port:++port,verifyClient:function(e){return!0}},function(){var e={port:port,host:"127.0.0.1",headers:{Connection:"Upgrade",Upgrade:"WebSocket","Sec-WebSocket-Key1":"3e6b263  4 17 80","Sec-WebSocket-Key2":"17  9 G`ZD9   2 2b 7X 3 /r90",Origin:"http://foobar.com"}},t=http.request(e);t.write("WjN}|M(6"),t.write(new Buffer([0,72,101,108,108,111,255],"binary")),t.end()});t.on("connection",function(n){n.on("message",function(r){r.should.eql("Hello"),n.terminate(),t.close(),e()})}),t.on("error",function(){})})})}),describe("client properties",function(){it("protocol is exposed",function(e){var t=new WebSocketServer({port:++port},function(){var e=new WebSocket("ws://localhost:"+port,{protocol:"hi"})});t.on("connection",function(n){n.protocol.should.eql("hi"),t.close(),e()})}),it("protocolVersion is exposed",function(e){var t=new WebSocketServer({port:++port},function(){var e=new WebSocket("ws://localhost:"+port,{protocolVersion:8})});t.on("connection",function(n){n.protocolVersion.should.eql(8),t.close(),e()})}),it("upgradeReq is the original request object",function(e){var t=new WebSocketServer({port:++port},function(){var e=new WebSocket("ws://localhost:"+port,{protocolVersion:8})});t.on("connection",function(n){n.upgradeReq.httpVersion.should.eql("1.1"),t.close(),e()})})})});