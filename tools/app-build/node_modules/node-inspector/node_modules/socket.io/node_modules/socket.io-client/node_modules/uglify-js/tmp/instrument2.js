function instrument(e){function r(e,t){var n=pro.gen_code(e,{beautify:!0}),r=e[0],i=[];return t||(t=""),typeof r=="object"?(n=n.split(/\n/).shift(),i=[["string",r.toString()],["string",n],["num",r.start.line],["num",r.start.col],["num",r.end.line],["num",r.end.col]]):i=[["string",r],["string",n]],["call",["name","trace"],i]}function s(){var e;return this[0].start&&i.indexOf(this)<0&&(i.push(this),e=["splice",[["stat",r(this)],n.walk(this)]],i.pop(this)),e}function o(e,t,i){return[this[0],n.walk(e),["seq",r(t),n.walk(t)],["seq",r(i),n.walk(i)]]}function u(e,t,i){return e!=="&&"&&e!=="||"?[this[0],e,n.walk(t),n.walk(i)]:[this[0],e,["seq",r(t),n.walk(t)],["seq",r(i),n.walk(i)]]}var t=jsp.parse(e,!1,!0),n=pro.ast_walker(),i=[],a=n.with_walkers({stat:s,label:s,"break":s,"continue":s,"debugger":s,"var":s,"const":s,"return":s,"throw":s,"try":s,defun:s,"if":s,"while":s,"do":s,"for":s,"for-in":s,"switch":s,"with":s,conditional:o,binary:u},function(){return n.walk(t)});return pro.gen_code(a,{beautify:!0})}function test(){a=5,c+=a+b,"foo";var e=5;const t=6,n=7;switch("foo"){case"foo":return 1;case"bar":return 2}for(var r=0;r<5;++r)console.log("Hello "+r);for(var r in[1,2,3])console.log(r);for(var r=0;r<5;++r)console.log("foo");for(var r=0;r<5;++r)console.log("foo");var i=plurp()?1:0,s=a?doX(y)&&goZoo("zoo"):b?blerg({x:y}):null,s=X||Y}var jsp=require("uglify-js").parser,pro=require("uglify-js").uglify,code=instrument(test.toString());console.log(code);