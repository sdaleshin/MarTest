function Server(e,t){var n=this;this.origins=t||["*:*"],this.port=843,this.log=console.log,Object.keys(e).forEach(function(t){n[t]&&(n[t]=e[t])}),this.socket=net.createServer(function(t){t.on("error",function(){n.responder.call(n,t)}),n.responder.call(n,t)}),this.socket.on("error",function(t){t.errno==13?(n.log&&n.log("Unable to listen to port `"+n.port+"` as your Node.js instance does not have root privileges. "+(n.server?"The Flash Policy File requests will only be served inline over the supplied HTTP server. Inline serving is slower than a dedicated server instance.":"No fallback server supplied, we will be unable to answer Flash Policy File requests.")),n.emit("connect_failed",t),n.socket.removeAllListeners(),delete n.socket):n.log&&n.log("FlashPolicyFileServer received an error event:\n"+(t.message?t.message:t))}),this.socket.on("timeout",function(){}),this.socket.on("close",function(t){t&&n.log&&n.log("Server closing due to an error: \n"+(t.message?t.message:t)),n.server&&(n.server["@"]&&n.server.online&&n.server.removeListener("connection",n.server["@"]),delete n.server.online)}),this.compile()}var slice=Array.prototype.slice,net=require("net");Server.prototype.listen=function(t,n,r){var i=this,s=slice.call(arguments,0),o;return s.forEach(function(t){var n=typeof t;n==="number"&&(i.port=t),n==="function"&&(o=t),n==="object"&&(i.server=t)}),this.server&&(this.server["@"]=function(t){t.once("data",function(n){if(n&&n[0]===60&&n.toString()==="<policy-file-request/>\0"&&t&&(t.readyState==="open"||t.readyState==="writeOnly"))try{t.end(i.buffer)}catch(r){}})},this.server.on("connection",this.server["@"])),this.port>=0&&this.socket.listen(this.port,function(){i.socket.online=!0,o&&(o.call(i),o=undefined)}),this},Server.prototype.responder=function(t){if(t&&t.readyState=="open"&&t.end)try{t.end(this.buffer)}catch(n){}},Server.prototype.compile=function(){var t=['<?xml version="1.0"?>','<!DOCTYPE cross-domain-policy SYSTEM "http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd">',"<cross-domain-policy>"];return this.origins.forEach(function n(n){var e=n.split(":");t.push('<allow-access-from domain="'+e[0]+'" to-ports="'+e[1]+'"/>')}),t.push("</cross-domain-policy>"),this.buffer=new Buffer(t.join(""),"utf8"),this},Server.prototype.add=function(){var t=slice.call(arguments,0),n=t.length;while(n--)this.origins.indexOf(t[n])>=0&&(t[n]=null);return Array.prototype.push.apply(this.origins,t.filter(function(t){return!!t})),this.compile(),this},Server.prototype.remove=function(t){var n=this.origins.indexOf(t);return n>0&&(this.origins.splice(n,1),this.compile()),this},Server.prototype.close=function(){return this.socket.removeAllListeners(),this.socket.close(),this},Object.keys(process.EventEmitter.prototype).forEach(function(t){Server.prototype[t]=Server.prototype[t]||function(){return this.socket&&this.socket[t].apply(this.socket,arguments),this}}),exports.createServer=function(t,n){return n=Array.isArray(n)?n:Array.isArray(t)?t:!1,t=!Array.isArray(t)&&t?t:{},new Server(t,n)},exports.Server=Server,exports.version="0.0.4";