function buffers_to_strings(e){return e.map(function(e){return e.toString()})}function require_number(e,t){return function(n,r){return assert.strictEqual(null,n,t+" expected "+e+", got error: "+n),assert.strictEqual(e,r,t+" "+e+" !== "+r),assert.strictEqual(typeof r,"number",t),!0}}function require_number_any(e){return function(t,n){return assert.strictEqual(null,t,e+" expected any number, got error: "+t),assert.strictEqual(typeof n,"number",e+" "+n+" is not a number"),!0}}function require_number_pos(e){return function(t,n){return assert.strictEqual(null,t,e+" expected positive number, got error: "+t),assert.strictEqual(!0,n>0,e+" "+n+" is not a positive number"),!0}}function require_string(e,t){return function(n,r){return assert.strictEqual(null,n,t+" expected string '"+e+"', got error: "+n),assert.equal(e,r,t+" "+e+" does not match "+r),!0}}function require_null(e){return function(t,n){return assert.strictEqual(null,t,e+" expected null, got error: "+t),assert.strictEqual(null,n,e+": "+n+" is not null"),!0}}function require_error(e){return function(t,n){return assert.notEqual(t,null,e+" err is null, but an error is expected here."),!0}}function is_empty_array(e){return Array.isArray(e)&&e.length===0}function last(e,t){return function(n,r){t(n,r),next(e)}}var redis=require("./index"),client=redis.createClient(),client2=redis.createClient(),client3=redis.createClient(),assert=require("assert"),crypto=require("crypto"),util=require("./lib/util"),test_db_num=15,tests={},connected=!1,ended=!1,next,cur_start,run_next_test,all_tests,all_start,test_count;redis.debug_mode=process.argv[2],next=function(t){console.log(" [33m"+(Date.now()-cur_start)+"[0m ms"),run_next_test()},tests.FLUSHDB=function(){var e="FLUSHDB";client.select(test_db_num,require_string("OK",e)),client2.select(test_db_num,require_string("OK",e)),client3.select(test_db_num,require_string("OK",e)),client.mset("flush keys 1","flush val 1","flush keys 2","flush val 2",require_string("OK",e)),client.FLUSHDB(require_string("OK",e)),client.dbsize(last(e,require_number(0,e)))},tests.MULTI_1=function(){var e="MULTI_1",t,n;t=client.multi(),t.mset("multifoo","10","multibar","20",require_string("OK",e)),t.set("foo2",require_error(e)),t.incr("multifoo",require_number(11,e)),t.incr("multibar",require_number(21,e)),t.exec(),n=client.multi(),n.incr("multibar",require_number(22,e)),n.incr("multifoo",require_number(12,e)),n.exec(function(t,n){assert.strictEqual(22,n[0]),assert.strictEqual(12,n[1]),next(e)})},tests.MULTI_2=function(){var e="MULTI_2";client.multi([["mget","multifoo","multibar",function(t,n){assert.strictEqual(2,n.length,e),assert.strictEqual("12",n[0].toString(),e),assert.strictEqual("22",n[1].toString(),e)}],["set","foo2",require_error(e)],["incr","multifoo",require_number(13,e)],["incr","multibar",require_number(23,e)]]).exec(function(t,n){assert.strictEqual(2,n[0].length,e),assert.strictEqual("12",n[0][0].toString(),e),assert.strictEqual("22",n[0][1].toString(),e),assert.strictEqual("13",n[1].toString()),assert.strictEqual("23",n[2].toString()),next(e)})},tests.MULTI_3=function(){var e="MULTI_3";client.sadd("some set","mem 1"),client.sadd("some set","mem 2"),client.sadd("some set","mem 3"),client.sadd("some set","mem 4"),client.del("some missing set"),client.smembers("some missing set",function(t,n){assert.strictEqual(!0,is_empty_array(n),e)}),client.multi([["smembers","some set"],["del","some set"],["smembers","some set"]]).scard("some set").exec(function(t,n){assert.strictEqual(!0,is_empty_array(n[2]),e),next(e)})},tests.MULTI_4=function(){var e="MULTI_4";client.multi().mset("some","10","keys","20").incr("some").incr("keys").mget("some","keys").exec(function(t,n){assert.strictEqual(null,t),assert.equal("OK",n[0]),assert.equal(11,n[1]),assert.equal(21,n[2]),assert.equal(11,n[3][0].toString()),assert.equal(21,n[3][1].toString()),next(e)})},tests.MULTI_5=function(){var e="MULTI_5";client.multi([["mget",["multifoo","some","random value","keys"]],["incr","multifoo"]]).exec(function(t,n){assert.strictEqual(n.length,2,e),assert.strictEqual(n[0].length,4,e),next(e)})},tests.MULTI_6=function(){var e="MULTI_6";client.multi().hmset("multihash","a","foo","b",1).hmset("multihash",{extra:"fancy",things:"here"}).hgetall("multihash").exec(function(t,n){assert.strictEqual(null,t),assert.equal("OK",n[0]),assert.equal(Object.keys(n[2]).length,4),assert.equal("foo",n[2].a),assert.equal("1",n[2].b),assert.equal("fancy",n[2].extra),assert.equal("here",n[2].things),next(e)})},tests.EVAL_1=function(){var e="EVAL_1";if(client.server_info.versions[0]>=2&&client.server_info.versions[1]>=5){client.eval("return 100.5",0,require_number(100,e)),client.eval("return 'hello world'",0,require_string("hello world",e)),client.eval("return true",0,require_number(1,e)),client.eval("return false",0,require_null(e)),client.eval("return {ok='fine'}",0,require_string("fine",e)),client.eval("return {err='this is an error'}",0,require_error(e)),client.eval("return {1,2,3,'ciao',{1,2}}",0,function(t,n){assert.strictEqual(5,n.length,e),assert.strictEqual(1,n[0],e),assert.strictEqual(2,n[1],e),assert.strictEqual(3,n[2],e),assert.strictEqual("ciao",n[3],e),assert.strictEqual(2,n[4].length,e),assert.strictEqual(1,n[4][0],e),assert.strictEqual(2,n[4][1],e)}),client.eval("return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}",2,"a","b","c","d",function(t,n){assert.strictEqual(4,n.length,e),assert.strictEqual("a",n[0],e),assert.strictEqual("b",n[1],e),assert.strictEqual("c",n[2],e),assert.strictEqual("d",n[3],e)});var t="return redis.call('get', 'sha test')",n=crypto.createHash("sha1").update(t).digest("hex");client.set("sha test","eval get sha test",function(r,i){if(r)throw r;client.eval(t,0,function(t,r){require_string("eval get sha test",e)(t,r),client.evalsha(n,0,require_string("eval get sha test",e)),client.evalsha("ffffffffffffffffffffffffffffffffffffffff",0,require_error(e))})}),client.set("incr key",0,function(t,n){if(t)throw t;client.eval("local foo = redis.call('incr','incr key')\nreturn {type(foo),foo}",0,function(t,n){if(t)throw t;assert.strictEqual(2,n.length,e),assert.strictEqual("number",n[0],e),assert.strictEqual(1,n[1],e)})}),client.set("bulk reply key","bulk reply value",function(t,n){client.eval("local foo = redis.call('get','bulk reply key'); return {type(foo),foo}",0,function(t,n){if(t)throw t;assert.strictEqual(2,n.length,e),assert.strictEqual("string",n[0],e),assert.strictEqual("bulk reply value",n[1],e)})}),client.multi().del("mylist").rpush("mylist","a").rpush("mylist","b").rpush("mylist","c").exec(function(t,n){if(t)throw t;client.eval("local foo = redis.call('lrange','mylist',0,-1); return {type(foo),foo[1],foo[2],foo[3],# foo}",0,function(t,n){assert.strictEqual(5,n.length,e),assert.strictEqual("table",n[0],e),assert.strictEqual("a",n[1],e),assert.strictEqual("b",n[2],e),assert.strictEqual("c",n[3],e),assert.strictEqual(3,n[4],e)})}),client.eval("local foo = redis.call('set','mykey','myval'); return {type(foo),foo['ok']}",0,function(t,n){if(t)throw t;assert.strictEqual(2,n.length,e),assert.strictEqual("table",n[0],e),assert.strictEqual("OK",n[1],e)}),client.set("error reply key","error reply value",function(t,n){if(t)throw t;client.eval("local foo = redis.pcall('incr','error reply key'); return {type(foo),foo['err']}",0,function(t,n){if(t)throw t;assert.strictEqual(2,n.length,e),assert.strictEqual("table",n[0],e),assert.strictEqual("ERR value is not an integer or out of range",n[1],e)})}),client.del("nil reply key",function(t,n){if(t)throw t;client.eval("local foo = redis.call('get','nil reply key'); return {type(foo),foo == false}",0,function(t,n){if(t)throw t;assert.strictEqual(2,n.length,e),assert.strictEqual("boolean",n[0],e),assert.strictEqual(1,n[1],e),next(e)})})}else console.log("Skipping "+e+" because server version isn't new enough."),next(e)},tests.WATCH_MULTI=function(){var e="WATCH_MULTI",t;client.server_info.versions[0]>=2&&client.server_info.versions[1]>=1?(client.watch(e),client.incr(e),t=client.multi(),t.incr(e),t.exec(last(e,require_null(e)))):(console.log("Skipping "+e+" because server version isn't new enough."),next(e))},tests.detect_buffers=function(){var e="detect_buffers",t=redis.createClient(null,null,{detect_buffers:!0});t.on("ready",function(){t.set("string key 1","string value"),t.get("string key 1",require_string("string value",e)),t.get(new Buffer("string key 1"),function(t,n){assert.strictEqual(null,t,e),assert.strictEqual(!0,Buffer.isBuffer(n),e),assert.strictEqual("<Buffer 73 74 72 69 6e 67 20 76 61 6c 75 65>",n.inspect(),e)}),t.hmset("hash key 2","key 1","val 1","key 2","val 2"),t.hmget("hash key 2","key 1","key 2",function(t,n){assert.strictEqual(null,t,e),assert.strictEqual(!0,Array.isArray(n),e),assert.strictEqual(2,n.length,e),assert.strictEqual("val 1",n[0],e),assert.strictEqual("val 2",n[1],e)}),t.hmget(new Buffer("hash key 2"),"key 1","key 2",function(t,n){assert.strictEqual(null,t,e),assert.strictEqual(!0,Array.isArray(n)),assert.strictEqual(2,n.length,e),assert.strictEqual(!0,Buffer.isBuffer(n[0])),assert.strictEqual(!0,Buffer.isBuffer(n[1])),assert.strictEqual("<Buffer 76 61 6c 20 31>",n[0].inspect(),e),assert.strictEqual("<Buffer 76 61 6c 20 32>",n[1].inspect(),e)}),t.hgetall("hash key 2",function(t,n){assert.strictEqual(null,t,e),assert.strictEqual("object",typeof n,e),assert.strictEqual(2,Object.keys(n).length,e),assert.strictEqual("val 1",n["key 1"],e),assert.strictEqual("val 2",n["key 2"],e)}),t.hgetall(new Buffer("hash key 2"),function(t,n){assert.strictEqual(null,t,e),assert.strictEqual("object",typeof n,e),assert.strictEqual(2,Object.keys(n).length,e),assert.strictEqual(!0,Buffer.isBuffer(n["key 1"])),assert.strictEqual(!0,Buffer.isBuffer(n["key 2"])),assert.strictEqual("<Buffer 76 61 6c 20 31>",n["key 1"].inspect(),e),assert.strictEqual("<Buffer 76 61 6c 20 32>",n["key 2"].inspect(),e)}),t.quit(function(t,n){next(e)})})},tests.socket_nodelay=function(){function o(){s++,s===3&&next(e)}function u(){assert.strictEqual(!0,t.options.socket_nodelay,e),assert.strictEqual(!1,n.options.socket_nodelay,e),assert.strictEqual(!0,r.options.socket_nodelay,e),t.set(["set key 1","set val"],require_string("OK",e)),t.set(["set key 2","set val"],require_string("OK",e)),t.get(["set key 1"],require_string("set val",e)),t.get(["set key 2"],require_string("set val",e)),n.set(["set key 3","set val"],require_string("OK",e)),n.set(["set key 4","set val"],require_string("OK",e)),n.get(["set key 3"],require_string("set val",e)),n.get(["set key 4"],require_string("set val",e)),r.set(["set key 5","set val"],require_string("OK",e)),r.set(["set key 6","set val"],require_string("OK",e)),r.get(["set key 5"],require_string("set val",e)),r.get(["set key 6"],require_string("set val",e)),t.quit(o),n.quit(o),r.quit(o)}function a(){i++,i===3&&u()}var e="socket_nodelay",t,n,r,i=0,s=0;t=redis.createClient(null,null,{socket_nodelay:!0}),n=redis.createClient(null,null,{socket_nodelay:!1}),r=redis.createClient(null,null),t.on("ready",a),n.on("ready",a),r.on("ready",a)},tests.reconnect=function(){var e="reconnect";client.set("recon 1","one"),client.set("recon 2","two",function(e,t){client.stream.destroy()}),client.on("reconnecting",function t(n){client.on("connect",function r(){client.select(test_db_num,require_string("OK",e)),client.get("recon 1",require_string("one",e)),client.get("recon 1",require_string("one",e)),client.get("recon 2",require_string("two",e)),client.get("recon 2",require_string("two",e)),client.removeListener("connect",r),client.removeListener("reconnecting",t),next(e)})})},tests.idle=function(){var e="idle";client.on("idle",function t(){client.removeListener("idle",t),next(e)}),client.set("idle","test")},tests.HSET=function(){var e="test hash",t=new Buffer("0123456789"),n=new Buffer("abcdefghij"),r=new Buffer(0),i=new Buffer(0),s="HSET";client.HSET(e,t,n,require_number(1,s)),client.HGET(e,t,require_string(n.toString(),s)),client.HSET(e,t,i,require_number(0,s)),client.HGET([e,t],require_string("",s)),client.HSET([e,r,n],require_number(1,s)),client.HSET(e,r,i,last(s,require_number(0,s)))},tests.HLEN=function(){var e="test hash",t=new Buffer("0123456789"),n=new Buffer("abcdefghij"),r=new Buffer(0),i=new Buffer(0),s="HSET",o=1e3;client.HSET(e,t,n,function(t,n){client.HLEN(e,function(e,t){assert.ok(2===+t),next(s)})})},tests.HMSET_BUFFER_AND_ARRAY=function(){var e="test hash",t="buffer",n=new Buffer("abcdefghij"),r="array",i=["array contents"],s="HSET";client.HMSET(e,t,n,r,i,last(s,require_string("OK",s)))},tests.HMGET=function(){var e="test hash 1",t="test hash 2",n="HMGET";client.HMSET(e,"0123456789","abcdefghij","some manner of key","a type of value",require_string("OK",n)),client.HMSET(t,{"0123456789":"abcdefghij","some manner of key":"a type of value"},require_string("OK",n)),client.HMGET(e,"0123456789","some manner of key",function(e,t){assert.strictEqual("abcdefghij",t[0].toString(),n),assert.strictEqual("a type of value",t[1].toString(),n)}),client.HMGET(t,"0123456789","some manner of key",function(e,t){assert.strictEqual("abcdefghij",t[0].toString(),n),assert.strictEqual("a type of value",t[1].toString(),n)}),client.HMGET(e,["0123456789"],function(e,t){assert.strictEqual("abcdefghij",t[0],n)}),client.HMGET(e,["0123456789","some manner of key"],function(e,t){assert.strictEqual("abcdefghij",t[0],n),assert.strictEqual("a type of value",t[1],n)}),client.HMGET(e,"missing thing","another missing thing",function(e,t){assert.strictEqual(null,t[0],n),assert.strictEqual(null,t[1],n),next(n)})},tests.HINCRBY=function(){var e="HINCRBY";client.hset("hash incr","value",10,require_number(1,e)),client.HINCRBY("hash incr","value",1,require_number(11,e)),client.HINCRBY("hash incr","value 2",1,last(e,require_number(1,e)))},tests.SUBSCRIBE=function(){var e=client,t=0,n="SUBSCRIBE";e.on("subscribe",function(e,t){e==="chan1"&&(client2.publish("chan1","message 1",require_number(1,n)),client2.publish("chan2","message 2",require_number(1,n)),client2.publish("chan1","message 3",require_number(1,n)))}),e.on("unsubscribe",function(t,r){r===0&&e.incr("did a thing",last(n,require_number(2,n)))}),e.on("message",function(n,r){t+=1,assert.strictEqual("message "+t,r.toString()),t===3&&e.unsubscribe("chan1","chan2")}),e.set("did a thing",1,require_string("OK",n)),e.subscribe("chan1","chan2",function(e,t){assert.strictEqual(null,e,"result sent back unexpected error: "+e),assert.strictEqual("chan1",t.toString(),n)})},tests.SUB_UNSUB_SUB=function(){var e="SUB_UNSUB_SUB";client3.subscribe("chan3"),client3.unsubscribe("chan3"),client3.subscribe("chan3",function(e,t){assert.strictEqual(null,e,"unexpected error: "+e),client2.publish("chan3","foo")}),client3.on("message",function(t,n){assert.strictEqual(t,"chan3"),assert.strictEqual(n,"foo"),next(e)})},tests.SUBSCRIBE_QUIT=function(){var e="SUBSCRIBE_QUIT";client3.on("end",function(){next(e)}),client3.on("subscribe",function(e,t){client3.quit()}),client3.subscribe("chan3")},tests.SUBSCRIBE_CLOSE_RESUBSCRIBE=function(){var e="SUBSCRIBE_CLOSE_RESUBSCRIBE",t=redis.createClient(),n=redis.createClient(),r=0;t.on("message",function(e,r){e==="chan1"?(assert.strictEqual(r,"hi on channel 1"),t.stream.end()):e==="chan2"?(assert.strictEqual(r,"hi on channel 2"),t.stream.end()):(t.quit(),n.quit(),assert.fail("test failed"))}),t.subscribe("chan1","chan2"),n.once("ready",function(){console.log("c2 is ready"),t.on("ready",function(i,s){console.log("c1 is ready",r),r++;if(r==1){n.publish("chan1","hi on channel 1");return}r==2?n.publish("chan2","hi on channel 2"):t.quit(function(){n.quit(function(){next(e)})})}),n.publish("chan1","hi on channel 1")})},tests.EXISTS=function(){var e="EXISTS";client.del("foo","foo2",require_number_any(e)),client.set("foo","bar",require_string("OK",e)),client.EXISTS("foo",require_number(1,e)),client.EXISTS("foo2",last(e,require_number(0,e)))},tests.DEL=function(){var e="DEL";client.DEL("delkey",require_number_any(e)),client.set("delkey","delvalue",require_string("OK",e)),client.DEL("delkey",require_number(1,e)),client.exists("delkey",require_number(0,e)),client.DEL("delkey",require_number(0,e)),client.mset("delkey","delvalue","delkey2","delvalue2",require_string("OK",e)),client.DEL("delkey","delkey2",last(e,require_number(2,e)))},tests.TYPE=function(){var e="TYPE";client.set(["string key","should be a string"],require_string("OK",e)),client.rpush(["list key","should be a list"],require_number_pos(e)),client.sadd(["set key","should be a set"],require_number_any(e)),client.zadd(["zset key","10.0","should be a zset"],require_number_any(e)),client.hset(["hash key","hashtest","should be a hash"],require_number_any(0,e)),client.TYPE(["string key"],require_string("string",e)),client.TYPE(["list key"],require_string("list",e)),client.TYPE(["set key"],require_string("set",e)),client.TYPE(["zset key"],require_string("zset",e)),client.TYPE("not here yet",require_string("none",e)),client.TYPE(["hash key"],last(e,require_string("hash",e)))},tests.KEYS=function(){var e="KEYS";client.mset(["test keys 1","test val 1","test keys 2","test val 2"],require_string("OK",e)),client.KEYS(["test keys*"],function(t,n){assert.strictEqual(null,t,"result sent back unexpected error: "+t),assert.strictEqual(2,n.length,e),assert.strictEqual("test keys 1",n[0].toString(),e),assert.strictEqual("test keys 2",n[1].toString(),e),next(e)})},tests.MULTIBULK_ZERO_LENGTH=function(){var e="MULTIBULK_ZERO_LENGTH";client.KEYS(["users:*"],function(t,n){assert.strictEqual(null,t,"error on empty multibulk reply"),assert.strictEqual(!0,is_empty_array(n),"not an empty array"),next(e)})},tests.RANDOMKEY=function(){var e="RANDOMKEY";client.mset(["test keys 1","test val 1","test keys 2","test val 2"],require_string("OK",e)),client.RANDOMKEY([],function(t,n){assert.strictEqual(null,t,e+" result sent back unexpected error: "+t),assert.strictEqual(!0,/\w+/.test(n),e),next(e)})},tests.RENAME=function(){var e="RENAME";client.set(["foo","bar"],require_string("OK",e)),client.RENAME(["foo","new foo"],require_string("OK",e)),client.exists(["foo"],require_number(0,e)),client.exists(["new foo"],last(e,require_number(1,e)))},tests.RENAMENX=function(){var e="RENAMENX";client.set(["foo","bar"],require_string("OK",e)),client.set(["foo2","bar2"],require_string("OK",e)),client.RENAMENX(["foo","foo2"],require_number(0,e)),client.exists(["foo"],require_number(1,e)),client.exists(["foo2"],require_number(1,e)),client.del(["foo2"],require_number(1,e)),client.RENAMENX(["foo","foo2"],require_number(1,e)),client.exists(["foo"],require_number(0,e)),client.exists(["foo2"],last(e,require_number(1,e)))},tests.DBSIZE=function(){var e="DBSIZE";client.set(["foo","bar"],require_string("OK",e)),client.DBSIZE([],last(e,require_number_pos("DBSIZE")))},tests.GET=function(){var e="GET";client.set(["get key","get val"],require_string("OK",e)),client.GET(["get key"],last(e,require_string("get val",e)))},tests.SET=function(){var e="SET";client.SET(["set key","set val"],require_string("OK",e)),client.get(["set key"],last(e,require_string("set val",e)))},tests.GETSET=function(){var e="GETSET";client.set(["getset key","getset val"],require_string("OK",e)),client.GETSET(["getset key","new getset val"],require_string("getset val",e)),client.get(["getset key"],last(e,require_string("new getset val",e)))},tests.MGET=function(){var e="MGET";client.mset(["mget keys 1","mget val 1","mget keys 2","mget val 2","mget keys 3","mget val 3"],require_string("OK",e)),client.MGET("mget keys 1","mget keys 2","mget keys 3",function(t,n){assert.strictEqual(null,t,"result sent back unexpected error: "+t),assert.strictEqual(3,n.length,e),assert.strictEqual("mget val 1",n[0].toString(),e),assert.strictEqual("mget val 2",n[1].toString(),e),assert.strictEqual("mget val 3",n[2].toString(),e)}),client.MGET(["mget keys 1","mget keys 2","mget keys 3"],function(t,n){assert.strictEqual(null,t,"result sent back unexpected error: "+t),assert.strictEqual(3,n.length,e),assert.strictEqual("mget val 1",n[0].toString(),e),assert.strictEqual("mget val 2",n[1].toString(),e),assert.strictEqual("mget val 3",n[2].toString(),e)}),client.MGET(["mget keys 1","some random shit","mget keys 2","mget keys 3"],function(t,n){assert.strictEqual(null,t,"result sent back unexpected error: "+t),assert.strictEqual(4,n.length,e),assert.strictEqual("mget val 1",n[0].toString(),e),assert.strictEqual(null,n[1],e),assert.strictEqual("mget val 2",n[2].toString(),e),assert.strictEqual("mget val 3",n[3].toString(),e),next(e)})},tests.SETNX=function(){var e="SETNX";client.set(["setnx key","setnx value"],require_string("OK",e)),client.SETNX(["setnx key","new setnx value"],require_number(0,e)),client.del(["setnx key"],require_number(1,e)),client.exists(["setnx key"],require_number(0,e)),client.SETNX(["setnx key","new setnx value"],require_number(1,e)),client.exists(["setnx key"],last(e,require_number(1,e)))},tests.SETEX=function(){var e="SETEX";client.SETEX(["setex key","100","setex val"],require_string("OK",e)),client.exists(["setex key"],require_number(1,e)),client.ttl(["setex key"],last(e,require_number_pos(e)))},tests.MSETNX=function(){var e="MSETNX";client.mset(["mset1","val1","mset2","val2","mset3","val3"],require_string("OK",e)),client.MSETNX(["mset3","val3","mset4","val4"],require_number(0,e)),client.del(["mset3"],require_number(1,e)),client.MSETNX(["mset3","val3","mset4","val4"],require_number(1,e)),client.exists(["mset3"],require_number(1,e)),client.exists(["mset4"],last(e,require_number(1,e)))},tests.HGETALL=function(){var e="HGETALL";client.hmset(["hosts","mjr","1","another","23","home","1234"],require_string("OK",e)),client.HGETALL(["hosts"],function(t,n){assert.strictEqual(null,t,e+" result sent back unexpected error: "+t),assert.strictEqual(3,Object.keys(n).length,e),assert.strictEqual("1",n.mjr.toString(),e),assert.strictEqual("23",n.another.toString(),e),assert.strictEqual("1234",n.home.toString(),e),next(e)})},tests.HGETALL_NULL=function(){var e="HGETALL_NULL";client.hgetall("missing",function(t,n){assert.strictEqual(null,t),assert.strictEqual(null,n),next(e)})},tests.UTF8=function(){var e="UTF8",t="ಠ_ಠ";client.set(["utf8test",t],require_string("OK",e)),client.get(["utf8test"],function(n,r){assert.strictEqual(null,n),assert.strictEqual(t,r),next(e)})},tests.SADD=function(){var e="SADD";client.del("set0"),client.SADD("set0","member0",require_number(1,e)),client.sadd("set0","member0",last(e,require_number(0,e)))},tests.SADD2=function(){var e="SADD2";client.del("set0"),client.sadd("set0",["member0","member1","member2"],require_number(3,e)),client.smembers("set0",function(e,t){assert.strictEqual(t.length,3),assert.strictEqual(t[0],"member0"),assert.strictEqual(t[1],"member1"),assert.strictEqual(t[2],"member2")}),client.SADD("set1",["member0","member1","member2"],require_number(3,e)),client.smembers("set1",function(t,n){assert.strictEqual(n.length,3),assert.strictEqual(n[0],"member0"),assert.strictEqual(n[1],"member1"),assert.strictEqual(n[2],"member2"),next(e)})},tests.SISMEMBER=function(){var e="SISMEMBER";client.del("set0"),client.sadd("set0","member0",require_number(1,e)),client.sismember("set0","member0",require_number(1,e)),client.sismember("set0","member1",last(e,require_number(0,e)))},tests.SCARD=function(){var e="SCARD";client.del("set0"),client.sadd("set0","member0",require_number(1,e)),client.scard("set0",require_number(1,e)),client.sadd("set0","member1",require_number(1,e)),client.scard("set0",last(e,require_number(2,e)))},tests.SREM=function(){var e="SREM";client.del("set0"),client.sadd("set0","member0",require_number(1,e)),client.srem("set0","foobar",require_number(0,e)),client.srem("set0","member0",require_number(1,e)),client.scard("set0",last(e,require_number(0,e)))},tests.SPOP=function(){var e="SPOP";client.del("zzz"),client.sadd("zzz","member0",require_number(1,e)),client.scard("zzz",require_number(1,e)),client.spop("zzz",function(t,n){t&&assert.fail(t),assert.equal(n,"member0",e)}),client.scard("zzz",last(e,require_number(0,e)))},tests.SDIFF=function(){var e="SDIFF";client.del("foo"),client.sadd("foo","x",require_number(1,e)),client.sadd("foo","a",require_number(1,e)),client.sadd("foo","b",require_number(1,e)),client.sadd("foo","c",require_number(1,e)),client.sadd("bar","c",require_number(1,e)),client.sadd("baz","a",require_number(1,e)),client.sadd("baz","d",require_number(1,e)),client.sdiff("foo","bar","baz",function(t,n){t&&assert.fail(t,e),n.sort(),assert.equal(n.length,2,e),assert.equal(n[0],"b",e),assert.equal(n[1],"x",e),next(e)})},tests.SDIFFSTORE=function(){var e="SDIFFSTORE";client.del("foo"),client.del("bar"),client.del("baz"),client.del("quux"),client.sadd("foo","x",require_number(1,e)),client.sadd("foo","a",require_number(1,e)),client.sadd("foo","b",require_number(1,e)),client.sadd("foo","c",require_number(1,e)),client.sadd("bar","c",require_number(1,e)),client.sadd("baz","a",require_number(1,e)),client.sadd("baz","d",require_number(1,e)),client.sdiffstore("quux","foo","bar","baz",require_number(2,e)),client.smembers("quux",function(t,n){t&&assert.fail(t,e);var r=buffers_to_strings(n).sort();assert.deepEqual(r,["b","x"],e),next(e)})},tests.SMEMBERS=function(){var e="SMEMBERS";client.del("foo"),client.sadd("foo","x",require_number(1,e)),client.smembers("foo",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["x"],e)}),client.sadd("foo","y",require_number(1,e)),client.smembers("foo",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,2,e);var r=buffers_to_strings(n).sort();assert.deepEqual(r,["x","y"],e),next(e)})},tests.SMOVE=function(){var e="SMOVE";client.del("foo"),client.del("bar"),client.sadd("foo","x",require_number(1,e)),client.smove("foo","bar","x",require_number(1,e)),client.sismember("foo","x",require_number(0,e)),client.sismember("bar","x",require_number(1,e)),client.smove("foo","bar","x",last(e,require_number(0,e)))},tests.SINTER=function(){var e="SINTER";client.del("sa"),client.del("sb"),client.del("sc"),client.sadd("sa","a",require_number(1,e)),client.sadd("sa","b",require_number(1,e)),client.sadd("sa","c",require_number(1,e)),client.sadd("sb","b",require_number(1,e)),client.sadd("sb","c",require_number(1,e)),client.sadd("sb","d",require_number(1,e)),client.sadd("sc","c",require_number(1,e)),client.sadd("sc","d",require_number(1,e)),client.sadd("sc","e",require_number(1,e)),client.sinter("sa","sb",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,2,e),assert.deepEqual(buffers_to_strings(n).sort(),["b","c"],e)}),client.sinter("sb","sc",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,2,e),assert.deepEqual(buffers_to_strings(n).sort(),["c","d"],e)}),client.sinter("sa","sc",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,1,e),assert.equal(n[0],"c",e)}),client.sinter("sa","sb","sc",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,1,e),assert.equal(n[0],"c",e),next(e)})},tests.SINTERSTORE=function(){var e="SINTERSTORE";client.del("sa"),client.del("sb"),client.del("sc"),client.del("foo"),client.sadd("sa","a",require_number(1,e)),client.sadd("sa","b",require_number(1,e)),client.sadd("sa","c",require_number(1,e)),client.sadd("sb","b",require_number(1,e)),client.sadd("sb","c",require_number(1,e)),client.sadd("sb","d",require_number(1,e)),client.sadd("sc","c",require_number(1,e)),client.sadd("sc","d",require_number(1,e)),client.sadd("sc","e",require_number(1,e)),client.sinterstore("foo","sa","sb","sc",require_number(1,e)),client.smembers("foo",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["c"],e),next(e)})},tests.SUNION=function(){var e="SUNION";client.del("sa"),client.del("sb"),client.del("sc"),client.sadd("sa","a",require_number(1,e)),client.sadd("sa","b",require_number(1,e)),client.sadd("sa","c",require_number(1,e)),client.sadd("sb","b",require_number(1,e)),client.sadd("sb","c",require_number(1,e)),client.sadd("sb","d",require_number(1,e)),client.sadd("sc","c",require_number(1,e)),client.sadd("sc","d",require_number(1,e)),client.sadd("sc","e",require_number(1,e)),client.sunion("sa","sb","sc",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n).sort(),["a","b","c","d","e"],e),next(e)})},tests.SUNIONSTORE=function(){var e="SUNIONSTORE";client.del("sa"),client.del("sb"),client.del("sc"),client.del("foo"),client.sadd("sa","a",require_number(1,e)),client.sadd("sa","b",require_number(1,e)),client.sadd("sa","c",require_number(1,e)),client.sadd("sb","b",require_number(1,e)),client.sadd("sb","c",require_number(1,e)),client.sadd("sb","d",require_number(1,e)),client.sadd("sc","c",require_number(1,e)),client.sadd("sc","d",require_number(1,e)),client.sadd("sc","e",require_number(1,e)),client.sunionstore("foo","sa","sb","sc",function(t,n){t&&assert.fail(t,e),assert.equal(n,5,e)}),client.smembers("foo",function(t,n){t&&assert.fail(t,e),assert.equal(n.length,5,e),assert.deepEqual(buffers_to_strings(n).sort(),["a","b","c","d","e"],e),next(e)})},tests.SORT=function(){var e="SORT";client.del("y"),client.del("x"),client.rpush("y","d",require_number(1,e)),client.rpush("y","b",require_number(2,e)),client.rpush("y","a",require_number(3,e)),client.rpush("y","c",require_number(4,e)),client.rpush("x","3",require_number(1,e)),client.rpush("x","9",require_number(2,e)),client.rpush("x","2",require_number(3,e)),client.rpush("x","4",require_number(4,e)),client.set("w3","4",require_string("OK",e)),client.set("w9","5",require_string("OK",e)),client.set("w2","12",require_string("OK",e)),client.set("w4","6",require_string("OK",e)),client.set("o2","buz",require_string("OK",e)),client.set("o3","foo",require_string("OK",e)),client.set("o4","baz",require_string("OK",e)),client.set("o9","bar",require_string("OK",e)),client.set("p2","qux",require_string("OK",e)),client.set("p3","bux",require_string("OK",e)),client.set("p4","lux",require_string("OK",e)),client.set("p9","tux",require_string("OK",e)),client.sort("y","asc","alpha",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["a","b","c","d"],e)}),client.sort("y","desc","alpha",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["d","c","b","a"],e)}),client.sort("x","asc",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),[2,3,4,9],e)}),client.sort("x","desc",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),[9,4,3,2],e)}),client.sort("x","by","w*","asc",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),[3,9,4,2],e)}),client.sort("x","by","w*","asc","get","o*",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["foo","bar","baz","buz"],e)}),client.sort("x","by","w*","asc","get","o*","get","p*",function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["foo","bux","bar","tux","baz","lux","buz","qux"],e)}),client.sort("x","by","w*","asc","get","o*","get","p*","store","bacon",function(t){t&&assert.fail(t,e)}),client.lrange("bacon",0,-1,function(t,n){t&&assert.fail(t,e),assert.deepEqual(buffers_to_strings(n),["foo","bux","bar","tux","baz","lux","buz","qux"],e),next(e)})},tests.MONITOR=function(){var e="MONITOR",t=[],n;n=redis.createClient(),n.monitor(function(e,t){client.mget("some","keys","foo","bar"),client.set("json",JSON.stringify({foo:"123",bar:"sdflkdfsjk",another:!1}))}),n.on("monitor",function(r,i){if(i[0]==="monitor")return;t.push(i),t.length===2&&(assert.strictEqual(5,t[0].length),assert.strictEqual("mget",t[0][0]),assert.strictEqual("some",t[0][1]),assert.strictEqual("keys",t[0][2]),assert.strictEqual("foo",t[0][3]),assert.strictEqual("bar",t[0][4]),assert.strictEqual(3,t[1].length),assert.strictEqual("set",t[1][0]),assert.strictEqual("json",t[1][1]),assert.strictEqual('{"foo":"123","bar":"sdflkdfsjk","another":false}',t[1][2]),n.quit(function(t,n){next(e)}))})},tests.BLPOP=function(){var e="BLPOP";client.rpush("blocking list","initial value",function(t,n){client2.BLPOP("blocking list",0,function(e,t){assert.strictEqual("blocking list",t[0].toString()),assert.strictEqual("initial value",t[1].toString()),client.rpush("blocking list","wait for this value")}),client2.BLPOP("blocking list",0,function(t,n){assert.strictEqual("blocking list",n[0].toString()),assert.strictEqual("wait for this value",n[1].toString()),next(e)})})},tests.BLPOP_TIMEOUT=function(){var e="BLPOP_TIMEOUT";client2.BLPOP("blocking list",1,function(t,n){if(t)throw t;assert.strictEqual(n,null),next(e)})},tests.EXPIRE=function(){var e="EXPIRE";client.set(["expiry key","bar"],require_string("OK",e)),client.EXPIRE(["expiry key","1"],require_number_pos(e)),setTimeout(function(){client.exists(["expiry key"],last(e,require_number(0,e)))},2e3)},tests.TTL=function(){var e="TTL";client.set(["ttl key","ttl val"],require_string("OK",e)),client.expire(["ttl key","100"],require_number_pos(e)),setTimeout(function(){client.TTL(["ttl key"],last(e,require_number_pos(0,e)))},500)},tests.OPTIONAL_CALLBACK=function(){var e="OPTIONAL_CALLBACK";client.del("op_cb1"),client.set("op_cb1","x"),client.get("op_cb1",last(e,require_string("x",e)))},tests.OPTIONAL_CALLBACK_UNDEFINED=function(){var e="OPTIONAL_CALLBACK_UNDEFINED";client.del("op_cb2"),client.set("op_cb2","y",undefined),client.get("op_cb2",last(e,require_string("y",e)))},tests.HMSET_THROWS_ON_NON_STRINGS=function(){function r(e,t){assert(e)}function i(){client.hmset(t,n)}var e="HMSET_THROWS_ON_NON_STRINGS",t=e,n={a:["this is not a string"]};client.hmset(t,n,r),assert.throws(i),next(e)},tests.ENABLE_OFFLINE_QUEUE_TRUE=function(){var e="ENABLE_OFFLINE_QUEUE_TRUE",t=redis.createClient(9999,null,{max_attempts:1});return t.on("error",function(e){}),setTimeout(function(){return t.set(e,e,function(e,t){assert.ifError(e)}),setTimeout(function(){return assert.strictEqual(t.offline_queue.length,1),next(e)},25)},50)},tests.ENABLE_OFFLINE_QUEUE_FALSE=function(){var e="ENABLE_OFFLINE_QUEUE_FALSE",t=redis.createClient(9999,null,{max_attempts:1,enable_offline_queue:!1});t.on("error",function(){}),assert.throws(function(){t.set(e,e)}),assert.doesNotThrow(function(){t.set(e,e,function(t){assert.ok(t),setTimeout(function(){next(e)},50)})})},tests.auth=function(){var e="AUTH",t,n=0;t=redis.createClient(9006,"filefish.redistogo.com"),t.auth("664b1b6aaf134e1ec281945a8de702a9",function(t,n){assert.strictEqual(null,t,e),assert.strictEqual("OK",n.toString(),e)}),t.on("ready",function(){n++,n===1?t.stream.destroy():t.quit(function(t,n){next(e)})})},all_tests=Object.keys(tests),all_start=new Date,test_count=0,run_next_test=function(){var t=all_tests.shift();typeof tests[t]=="function"?(util.print("- [1m"+t.toLowerCase()+"[0m:"),cur_start=new Date,test_count+=1,tests[t]()):(console.log("\n  completed [32m%d[0m tests in [33m%d[0m ms\n",test_count,new Date-all_start),client.quit(),client2.quit())},client.once("ready",function(){console.log("Connected to "+client.host+":"+client.port+", Redis server version "+client.server_info.redis_version+"\n"),console.log("Using reply parser "+client.reply_parser.name),run_next_test(),connected=!0}),client.on("end",function(){ended=!0}),client.on("error",function(e){console.error("client: "+e.stack),process.exit()}),client2.on("error",function(e){console.error("client2: "+e.stack),process.exit()}),client3.on("error",function(e){console.error("client3: "+e.stack),process.exit()}),client.on("reconnecting",function(e){console.log("reconnecting: "+util.inspect(e))}),process.on("uncaughtException",function(e){console.error("Uncaught exception: "+e.stack),process.exit(1)}),process.on("exit",function(e){assert.equal(!0,connected),assert.equal(!0,ended)});