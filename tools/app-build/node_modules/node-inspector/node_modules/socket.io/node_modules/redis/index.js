function RedisClient(e,t){this.stream=e,this.options=t=t||{},this.connection_id=++connection_id,this.connected=!1,this.ready=!1,this.connections=0,this.options.socket_nodelay===undefined&&(this.options.socket_nodelay=!0),this.should_buffer=!1,this.command_queue_high_water=this.options.command_queue_high_water||1e3,this.command_queue_low_water=this.options.command_queue_low_water||0,this.max_attempts=null,t.max_attempts&&!isNaN(t.max_attempts)&&t.max_attempts>0&&(this.max_attempts=+t.max_attempts),this.command_queue=new Queue,this.offline_queue=new Queue,this.commands_sent=0,this.connect_timeout=!1,t.connect_timeout&&!isNaN(t.connect_timeout)&&t.connect_timeout>0&&(this.connect_timeout=+t.connect_timeout),this.enable_offline_queue=!0,typeof this.options.enable_offline_queue=="boolean"&&(this.enable_offline_queue=this.options.enable_offline_queue),this.initialize_retry_vars(),this.pub_sub_mode=!1,this.subscription_set={},this.monitoring=!1,this.closing=!1,this.server_info={},this.auth_pass=null,this.parser_module=null,this.selected_db=null,this.old_state=null;var n=this;this.stream.on("connect",function(){n.on_connect()}),this.stream.on("data",function(e){n.on_data(e)}),this.stream.on("error",function(e){n.on_error(e.message)}),this.stream.on("close",function(){n.connection_gone("close")}),this.stream.on("end",function(){n.connection_gone("end")}),this.stream.on("drain",function(){n.should_buffer=!1,n.emit("drain")}),events.EventEmitter.call(this)}function try_callback(e,t){try{e(null,t)}catch(n){process.nextTick(function(){throw n})}}function reply_to_object(e){var t={},n,r,i,s;if(e.length===0)return null;for(n=0,r=e.length;n<r;n+=2)i=e[n].toString(),s=e[n+1],t[i]=s;return t}function reply_to_strings(e){var t;if(Buffer.isBuffer(e))return e.toString();if(Array.isArray(e)){for(t=0;t<e.length;t++)e[t]=e[t].toString();return e}return e}function Command(e,t,n,r,i){this.command=e,this.args=t,this.sub_command=n,this.buffer_args=r,this.callback=i}function Multi(e,t){this.client=e,this.queue=[["MULTI"]],Array.isArray(t)&&(this.queue=this.queue.concat(t))}function set_union(e,t){var n={};return e.forEach(function(e){n[e]=!0}),t.forEach(function(e){n[e]=!0}),Object.keys(n)}var net=require("net"),util=require("./lib/util"),Queue=require("./lib/queue"),to_array=require("./lib/to_array"),events=require("events"),crypto=require("crypto"),parsers=[],commands,connection_id=0,default_port=6379,default_host="127.0.0.1";exports.debug_mode=!1;try{require("./lib/parser/hiredis"),parsers.push(require("./lib/parser/hiredis"))}catch(err){exports.debug_mode&&console.warn("hiredis parser not installed.")}parsers.push(require("./lib/parser/javascript")),util.inherits(RedisClient,events.EventEmitter),exports.RedisClient=RedisClient,RedisClient.prototype.initialize_retry_vars=function(){this.retry_timer=null,this.retry_totaltime=0,this.retry_delay=150,this.retry_backoff=1.7,this.attempts=1},RedisClient.prototype.flush_and_error=function(e){var t;while(this.offline_queue.length>0)t=this.offline_queue.shift(),typeof t.callback=="function"&&t.callback(e);this.offline_queue=new Queue;while(this.command_queue.length>0)t=this.command_queue.shift(),typeof t.callback=="function"&&t.callback(e);this.command_queue=new Queue},RedisClient.prototype.on_error=function(e){var t="Redis connection to "+this.host+":"+this.port+" failed - "+e,n=this,r;if(this.closing)return;exports.debug_mode&&console.warn(t),this.flush_and_error(t),this.connected=!1,this.ready=!1,this.emit("error",new Error(t)),this.connection_gone("error")},RedisClient.prototype.do_auth=function(){var e=this;exports.debug_mode&&console.log("Sending auth to "+e.host+":"+e.port+" id "+e.connection_id),e.send_anyway=!0,e.send_command("auth",[this.auth_pass],function(t,n){if(t){if(t.toString().match("LOADING")){console.log("Redis still loading, trying to authenticate later"),setTimeout(function(){e.do_auth()},2e3);return}return e.emit("error",new Error("Auth error: "+t.message))}if(n.toString()!=="OK")return e.emit("error",new Error("Auth failed: "+n.toString()));exports.debug_mode&&console.log("Auth succeeded "+e.host+":"+e.port+" id "+e.connection_id),e.auth_callback&&(e.auth_callback(t,n),e.auth_callback=null),e.emit("connect"),e.options.no_ready_check?e.on_ready():e.ready_check()}),e.send_anyway=!1},RedisClient.prototype.on_connect=function(){exports.debug_mode&&console.log("Stream connected "+this.host+":"+this.port+" id "+this.connection_id);var e=this;this.connected=!0,this.ready=!1,this.attempts=0,this.connections+=1,this.command_queue=new Queue,this.emitted_end=!1,this.initialize_retry_vars(),this.options.socket_nodelay&&this.stream.setNoDelay(),this.stream.setTimeout(0),this.init_parser(),this.auth_pass?this.do_auth():(this.emit("connect"),this.options.no_ready_check?this.on_ready():this.ready_check())},RedisClient.prototype.init_parser=function(){var e=this;if(this.options.parser){if(!parsers.some(function(t){if(t.name===e.options.parser)return e.parser_module=t,exports.debug_mode&&console.log("Using parser module: "+e.parser_module.name),!0}))throw new Error("Couldn't find named parser "+e.options.parser+" on this system")}else exports.debug_mode&&console.log("Using default parser module: "+parsers[0].name),this.parser_module=parsers[0];this.parser_module.debug_mode=exports.debug_mode,this.reply_parser=new this.parser_module.Parser({return_buffers:e.options.return_buffers||e.options.detect_buffers||!1}),this.reply_parser.on("reply error",function(t){e.return_error(new Error(t))}),this.reply_parser.on("reply",function(t){e.return_reply(t)}),this.reply_parser.on("error",function(t){e.emit("error",new Error("Redis reply parser error: "+t.stack))})},RedisClient.prototype.on_ready=function(){var e=this;this.ready=!0,this.old_state!==null&&(this.monitoring=this.old_state.monitoring,this.pub_sub_mode=this.old_state.pub_sub_mode,this.selected_db=this.old_state.selected_db,this.old_state=null),this.selected_db!==null&&this.send_command("select",[this.selected_db]);if(this.pub_sub_mode===!0){var t=0,n=function(){t--,t==0&&e.emit("ready")};Object.keys(this.subscription_set).forEach(function(r){var i=r.split(" ");exports.debug_mode&&console.warn("sending pub/sub on_ready "+i[0]+", "+i[1]),t++,e.send_command(i[0]+"scribe",[i[1]],n)});return}this.monitoring?this.send_command("monitor"):this.send_offline_queue(),this.emit("ready")},RedisClient.prototype.on_info_cmd=function(e,t){var n=this,r={},i,s;if(e)return n.emit("error",new Error("Ready check failed: "+e.message));i=t.toString().split("\r\n"),i.forEach(function(e){var t=e.split(":");t[1]&&(r[t[0]]=t[1])}),r.versions=[],r.redis_version.split(".").forEach(function(e){r.versions.push(+e)}),this.server_info=r,!r.loading||r.loading&&r.loading==="0"?(exports.debug_mode&&console.log("Redis server ready."),this.on_ready()):(s=r.loading_eta_seconds*1e3,s>1e3&&(s=1e3),exports.debug_mode&&console.log("Redis server still loading, trying again in "+s),setTimeout(function(){n.ready_check()},s))},RedisClient.prototype.ready_check=function(){var e=this;exports.debug_mode&&console.log("checking server ready state..."),this.send_anyway=!0,this.info(function(t,n){e.on_info_cmd(t,n)}),this.send_anyway=!1},RedisClient.prototype.send_offline_queue=function(){var e,t=0;while(this.offline_queue.length>0)e=this.offline_queue.shift(),exports.debug_mode&&console.log("Sending offline command: "+e.command),t+=!this.send_command(e.command,e.args,e.callback);this.offline_queue=new Queue,t||(this.should_buffer=!1,this.emit("drain"))},RedisClient.prototype.connection_gone=function(e){var t=this,n;if(this.retry_timer)return;exports.debug_mode&&console.warn("Redis connection is gone from "+e+" event."),this.connected=!1,this.ready=!1;if(this.old_state===null){var r={monitoring:this.monitoring,pub_sub_mode:this.pub_sub_mode,selected_db:this.selected_db};this.old_state=r,this.monitoring=!1,this.pub_sub_mode=!1,this.selected_db=null}this.emitted_end||(this.emit("end"),this.emitted_end=!0),this.flush_and_error("Redis connection gone from "+e+" event.");if(this.closing){this.retry_timer=null,exports.debug_mode&&console.warn("connection ended from quit command, not retrying.");return}this.retry_delay=Math.floor(this.retry_delay*this.retry_backoff),exports.debug_mode&&console.log("Retry connection in "+this.current_retry_delay+" ms");if(this.max_attempts&&this.attempts>=this.max_attempts){this.retry_timer=null,console.error("node_redis: Couldn't get Redis connection after "+this.max_attempts+" attempts.");return}this.attempts+=1,this.emit("reconnecting",{delay:t.retry_delay,attempt:t.attempts}),this.retry_timer=setTimeout(function(){exports.debug_mode&&console.log("Retrying connection..."),t.retry_totaltime+=t.current_retry_delay;if(t.connect_timeout&&t.retry_totaltime>=t.connect_timeout){t.retry_timer=null,console.error("node_redis: Couldn't get Redis connection after "+t.retry_totaltime+"ms.");return}t.stream.connect(t.port,t.host),t.retry_timer=null},this.retry_delay)},RedisClient.prototype.on_data=function(e){exports.debug_mode&&console.log("net read "+this.host+":"+this.port+" id "+this.connection_id+": "+e.toString());try{this.reply_parser.execute(e)}catch(t){this.emit("error",t)}},RedisClient.prototype.return_error=function(e){var t=this.command_queue.shift(),n=this.command_queue.getLength();this.pub_sub_mode===!1&&n===0&&(this.emit("idle"),this.command_queue=new Queue),this.should_buffer&&n<=this.command_queue_low_water&&(this.emit("drain"),this.should_buffer=!1);if(t&&typeof t.callback=="function")try{t.callback(e)}catch(r){process.nextTick(function(){throw r})}else console.log("node_redis: no callback to send error: "+e.message),process.nextTick(function(){throw e})},RedisClient.prototype.return_reply=function(e){var t,n,r,i,s,o,u,a,f;t=this.command_queue.shift(),f=this.command_queue.getLength(),this.pub_sub_mode===!1&&f===0&&(this.emit("idle"),this.command_queue=new Queue),this.should_buffer&&f<=this.command_queue_low_water&&(this.emit("drain"),this.should_buffer=!1);if(t&&!t.sub_command)typeof t.callback=="function"?(this.options.detect_buffers&&t.buffer_args===!1&&(e=reply_to_strings(e)),e&&"hgetall"===t.command.toLowerCase()&&(e=reply_to_object(e)),try_callback(t.callback,e)):exports.debug_mode&&console.log("no callback for reply: "+(e&&e.toString&&e.toString()));else if(this.pub_sub_mode||t&&t.sub_command){if(Array.isArray(e)){s=e[0].toString();if(s==="message")this.emit("message",e[1].toString(),e[2]);else if(s==="pmessage")this.emit("pmessage",e[1].toString(),e[2].toString(),e[3]);else{if(s!=="subscribe"&&s!=="unsubscribe"&&s!=="psubscribe"&&s!=="punsubscribe")throw new Error("subscriptions are active but got unknown reply type "+s);e[2]===0?(this.pub_sub_mode=!1,this.debug_mode&&console.log("All subscriptions removed, exiting pub/sub mode")):this.pub_sub_mode=!0,t&&typeof t.callback=="function"&&try_callback(t.callback,e[1].toString()),this.emit(s,e[1].toString(),e[2])}}else if(!this.closing)throw new Error("subscriptions are active but got an invalid reply: "+e)}else{if(!this.monitoring)throw new Error("node_redis command queue state error. If you can reproduce this, please report it.");i=e.indexOf(" "),o=e.slice(0,i),u=e.indexOf('"'),a=e.slice(u+1,-1).split('" "').map(function(e){return e.replace(/\\"/g,'"')}),this.emit("monitor",o,a)}},RedisClient.prototype.send_command=function(e,t,n){var r,i,s,o,u,a,f,l=this.stream,c="",h=0,p;if(typeof e!="string")throw new Error("First argument to send_command must be the command name string, not "+typeof e);if(!Array.isArray(t))throw new Error("send_command: second argument must be an array");if(typeof n!="function"){if(!!n)throw new Error("send_command: last argument must be a callback or undefined");p=typeof t[t.length-1];if(p==="function"||p==="undefined")n=t.pop()}(e==="sadd"||e==="SADD")&&t.length>0&&Array.isArray(t[t.length-1])&&(t=t.slice(0,-1).concat(t[t.length-1])),f=!1;for(o=0,u=t.length,r;o<u;o+=1)Buffer.isBuffer(t[o])&&(f=!0);s=new Command(e,t,!1,f,n);if(!this.ready&&!this.send_anyway||!l.writable){exports.debug_mode&&(l.writable||console.log("send command: stream is not writeable."));if(this.enable_offline_queue)exports.debug_mode&&console.log("Queueing "+e+" for next server connection."),this.offline_queue.push(s),this.should_buffer=!0;else{var d=new Error("send_command: stream not writeable. enable_offline_queue is false");if(!s.callback)throw d;s.callback(d)}return!1}if(e==="subscribe"||e==="psubscribe"||e==="unsubscribe"||e==="punsubscribe")this.pub_sub_command(s);else if(e==="monitor")this.monitoring=!0;else if(e==="quit")this.closing=!0;else if(this.pub_sub_mode===!0)throw new Error("Connection in pub/sub mode, only pub/sub commands may be used");this.command_queue.push(s),this.commands_sent+=1,a=t.length+1,c="*"+a+"\r\n$"+e.length+"\r\n"+e+"\r\n";if(!f){for(o=0,u=t.length,r;o<u;o+=1)r=t[o],typeof r!="string"&&(r=String(r)),c+="$"+Buffer.byteLength(r)+"\r\n"+r+"\r\n";exports.debug_mode&&console.log("send "+this.host+":"+this.port+" id "+this.connection_id+": "+c),h+=!l.write(c)}else{exports.debug_mode&&console.log("send command ("+c+") has Buffer arguments"),h+=!l.write(c);for(o=0,u=t.length,r;o<u;o+=1)r=t[o],Buffer.isBuffer(r)||r instanceof String||(r=String(r)),Buffer.isBuffer(r)?r.length===0?(exports.debug_mode&&console.log("send_command: using empty string for 0 length buffer"),h+=!l.write("$0\r\n\r\n")):(h+=!l.write("$"+r.length+"\r\n"),h+=!l.write(r),h+=!l.write("\r\n"),exports.debug_mode&&console.log("send_command: buffer send "+r.length+" bytes")):(exports.debug_mode&&console.log("send_command: string send "+Buffer.byteLength(r)+" bytes: "+r),h+=!l.write("$"+Buffer.byteLength(r)+"\r\n"+r+"\r\n"))}exports.debug_mode&&console.log("send_command buffered_writes: "+h," should_buffer: "+this.should_buffer);if(h||this.command_queue.getLength()>=this.command_queue_high_water)this.should_buffer=!0;return!this.should_buffer},RedisClient.prototype.pub_sub_command=function(e){var t,n,r,i;this.pub_sub_mode===!1&&exports.debug_mode&&console.log("Entering pub/sub mode from "+e.command),this.pub_sub_mode=!0,e.sub_command=!0,r=e.command,i=e.args;if(r==="subscribe"||r==="psubscribe"){r==="subscribe"?n="sub":n="psub";for(t=0;t<i.length;t++)this.subscription_set[n+" "+i[t]]=!0}else{r==="unsubscribe"?n="sub":n="psub";for(t=0;t<i.length;t++)delete this.subscription_set[n+" "+i[t]]}},RedisClient.prototype.end=function(){return this.stream._events={},this.connected=!1,this.ready=!1,this.stream.end()},exports.Multi=Multi,commands=set_union(["get","set","setnx","setex","append","strlen","del","exists","setbit","getbit","setrange","getrange","substr","incr","decr","mget","rpush","lpush","rpushx","lpushx","linsert","rpop","lpop","brpop","brpoplpush","blpop","llen","lindex","lset","lrange","ltrim","lrem","rpoplpush","sadd","srem","smove","sismember","scard","spop","srandmember","sinter","sinterstore","sunion","sunionstore","sdiff","sdiffstore","smembers","zadd","zincrby","zrem","zremrangebyscore","zremrangebyrank","zunionstore","zinterstore","zrange","zrangebyscore","zrevrangebyscore","zcount","zrevrange","zcard","zscore","zrank","zrevrank","hset","hsetnx","hget","hmset","hmget","hincrby","hdel","hlen","hkeys","hvals","hgetall","hexists","incrby","decrby","getset","mset","msetnx","randomkey","select","move","rename","renamenx","expire","expireat","keys","dbsize","auth","ping","echo","save","bgsave","bgrewriteaof","shutdown","lastsave","type","multi","exec","discard","sync","flushdb","flushall","sort","info","monitor","ttl","persist","slaveof","debug","config","subscribe","unsubscribe","psubscribe","punsubscribe","publish","watch","unwatch","cluster","restore","migrate","dump","object","client","eval","evalsha"],require("./lib/commands")),commands.forEach(function(e){RedisClient.prototype[e]=function(t,n){return Array.isArray(t)&&typeof n=="function"?this.send_command(e,t,n):this.send_command(e,to_array(arguments))},RedisClient.prototype[e.toUpperCase()]=RedisClient.prototype[e],Multi.prototype[e]=function(){return this.queue.push([e].concat(to_array(arguments))),this},Multi.prototype[e.toUpperCase()]=Multi.prototype[e]}),RedisClient.prototype.select=function(e,t){var n=this;this.send_command("select",[e],function(r,i){r===null&&(n.selected_db=e),typeof t=="function"&&t(r,i)})},RedisClient.prototype.SELECT=RedisClient.prototype.select,RedisClient.prototype.auth=function(){var e=to_array(arguments);this.auth_pass=e[0],this.auth_callback=e[1],exports.debug_mode&&console.log("Saving auth as "+this.auth_pass),this.connected&&this.send_command("auth",e)},RedisClient.prototype.AUTH=RedisClient.prototype.auth,RedisClient.prototype.hmget=function(e,t,n){return Array.isArray(t)&&typeof n=="function"?this.send_command("hmget",[e].concat(t),n):Array.isArray(e)&&typeof t=="function"?this.send_command("hmget",e,t):this.send_command("hmget",to_array(arguments))},RedisClient.prototype.HMGET=RedisClient.prototype.hmget,RedisClient.prototype.hmset=function(e,t){var n,r,i,s,o;if(Array.isArray(e)&&typeof t=="function")return this.send_command("hmset",e,t);e=to_array(arguments),typeof e[e.length-1]=="function"?(t=e[e.length-1],e.length-=1):t=null;if(e.length===2&&typeof e[0]=="string"&&typeof e[1]=="object"){n=[e[0]],r=Object.keys(e[1]);for(i=0,s=r.length;i<s;i++){o=r[i],n.push(o);if(typeof e[1][o]!="string"){var u=new Error("hmset expected value to be a string",o,":",e[1][o]);if(t)return t(u);throw u}n.push(e[1][o])}e=n}return this.send_command("hmset",e,t)},RedisClient.prototype.HMSET=RedisClient.prototype.hmset,Multi.prototype.hmset=function(){var e=to_array(arguments),t;return e.length>=2&&typeof e[0]=="string"&&typeof e[1]=="object"?(t=["hmset",e[0]],Object.keys(e[1]).map(function(n){t.push(n),t.push(e[1][n])}),e[2]&&t.push(e[2]),e=t):e.unshift("hmset"),this.queue.push(e),this},Multi.prototype.HMSET=Multi.prototype.hmset,Multi.prototype.exec=function(e){var t=this;return this.queue.forEach(function(e,n){var r=e[0],i;typeof e[e.length-1]=="function"?e=e.slice(1,-1):e=e.slice(1),e.length===1&&Array.isArray(e[0])&&(e=e[0]),r.toLowerCase()==="hmset"&&typeof e[1]=="object"&&(i=e.pop(),Object.keys(i).forEach(function(t){e.push(t),e.push(i[t])})),this.client.send_command(r,e,function(e,r){if(e){var i=t.queue[n];if(typeof i[i.length-1]!="function")throw new Error(e);i[i.length-1](e),t.queue.splice(n,1)}})},this),this.client.send_command("EXEC",[],function(n,r){if(n){if(e){e(new Error(n));return}throw new Error(n)}var i,s,o,u,a,f;if(r)for(i=1,s=t.queue.length;i<s;i+=1)a=r[i-1],f=t.queue[i],a&&f[0].toLowerCase()==="hgetall"&&(r[i-1]=a=reply_to_object(a)),typeof f[f.length-1]=="function"&&f[f.length-1](null,a);e&&e(null,r)})},Multi.prototype.EXEC=Multi.prototype.exec,RedisClient.prototype.multi=function(e){return new Multi(this,e)},RedisClient.prototype.MULTI=function(e){return new Multi(this,e)};var eval=RedisClient.prototype.eval;RedisClient.prototype.eval=RedisClient.prototype.EVAL=function(){var e=this,t=to_array(arguments),n;typeof t[t.length-1]=="function"&&(n=t.pop());var r=t[0];t[0]=crypto.createHash("sha1").update(r).digest("hex"),e.evalsha(t,function(i,s){i&&/NOSCRIPT/.test(i.message)?(t[0]=r,eval.call(e,t,n)):n&&n(i,s)})},exports.createClient=function(e,t,n){var r=e||default_port,i=t||default_host,s,o;return o=net.createConnection(r,i),s=new RedisClient(o,n),s.port=r,s.host=i,s},exports.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)};