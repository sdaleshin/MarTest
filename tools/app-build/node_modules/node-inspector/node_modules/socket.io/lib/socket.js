/*!
 * socket.io-node
 * Copyright(c) 2011 LearnBoost <dev@learnboost.com>
 * MIT Licensed
 */

function Socket(e,t,n,r){this.id=t,this.namespace=n,this.manager=e,this.disconnected=!1,this.ackPackets=0,this.acks={},this.setFlags(),this.readable=r,this.store=this.manager.store.client(this.id),this.on("error",defaultError)}var parser=require("./parser"),util=require("./util"),EventEmitter=process.EventEmitter;exports=module.exports=Socket;var defaultError=function(){};Socket.prototype.__proto__=EventEmitter.prototype,Socket.prototype.__defineGetter__("handshake",function(){return this.manager.handshaken[this.id]}),Socket.prototype.__defineGetter__("transport",function(){return this.manager.transports[this.id].name}),Socket.prototype.__defineGetter__("log",function(){return this.manager.log}),Socket.prototype.__defineGetter__("json",function(){return this.flags.json=!0,this}),Socket.prototype.__defineGetter__("volatile",function(){return this.flags.volatile=!0,this}),Socket.prototype.__defineGetter__("broadcast",function(){return this.flags.broadcast=!0,this}),Socket.prototype.to=Socket.prototype.in=function(e){return this.flags.room=e,this},Socket.prototype.setFlags=function(){return this.flags={endpoint:this.namespace.name,room:""},this},Socket.prototype.onDisconnect=function(e){this.disconnected||(this.$emit("disconnect",e),this.disconnected=!0)},Socket.prototype.join=function(e,t){var n=this.namespace.name,e=n+"/"+e;return this.manager.onJoin(this.id,e),this.manager.store.publish("join",this.id,e),t&&(this.log.warn("Client#join callback is deprecated"),t()),this},Socket.prototype.leave=function(e,t){var n=this.namespace.name,e=n+"/"+e;return this.manager.onLeave(this.id,e),this.manager.store.publish("leave",this.id,e),t&&(this.log.warn("Client#leave callback is deprecated"),t()),this},Socket.prototype.packet=function(e){return this.flags.broadcast?(this.log.debug("broadcasting packet"),this.namespace.in(this.flags.room).except(this.id).packet(e)):(e.endpoint=this.flags.endpoint,e=parser.encodePacket(e),this.dispatch(e,this.flags.volatile)),this.setFlags(),this},Socket.prototype.dispatch=function(e,t){this.manager.transports[this.id]&&this.manager.transports[this.id].open?this.manager.transports[this.id].onDispatch(e,t):(t||this.manager.onClientDispatch(this.id,e,t),this.manager.store.publish("dispatch:"+this.id,e,t))},Socket.prototype.set=function(e,t,n){return this.store.set(e,t,n),this},Socket.prototype.get=function(e,t){return this.store.get(e,t),this},Socket.prototype.has=function(e,t){return this.store.has(e,t),this},Socket.prototype.del=function(e,t){return this.store.del(e,t),this},Socket.prototype.disconnect=function(){return this.disconnected||(this.log.info("booting client"),""===this.namespace.name?this.manager.transports[this.id]&&this.manager.transports[this.id].open?this.manager.transports[this.id].onForcedDisconnect():(this.manager.onClientDisconnect(this.id),this.manager.store.publish("disconnect:"+this.id)):(this.packet({type:"disconnect"}),this.manager.onLeave(this.id,this.namespace.name),this.$emit("disconnect","booted"))),this},Socket.prototype.send=function(e,t){var n={type:this.flags.json?"json":"message",data:e};return t&&(n.id=++this.ackPackets,n.ack=!0,this.acks[n.id]=t),this.packet(n)},Socket.prototype.$emit=EventEmitter.prototype.emit,Socket.prototype.emit=function(e){if(e=="newListener")return this.$emit.apply(this,arguments);var t=util.toArray(arguments).slice(1),n=t[t.length-1],r={type:"event",name:e};return"function"==typeof n&&(r.id=++this.ackPackets,r.ack=n.length?"data":!0,this.acks[r.id]=n,t=t.slice(0,t.length-1)),r.args=t,this.packet(r)};