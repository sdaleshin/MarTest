function CallFramesProvider(e,t){this._config=e,this._debuggerClient=t}var async=require("async"),convert=require("./convert.js"),SCOPE_ID_MATCHER=/^scope:(\d+):(\d+)$/;CallFramesProvider.prototype={fetchCallFrames:function(e){this._debuggerClient.request("backtrace",{inlineRefs:!0,fromFrame:0,toFrame:this._config.stackTraceLimit},function(t,n,r){if(t){e(t);return}this._convertBacktraceToCallFrames(n,r,e)}.bind(this))},_convertBacktraceToCallFrames:function(e,t,n){var r=e.frames||[];async.map(r,this._convertDebuggerFrameToInspectorFrame.bind(this,t),n)},_convertDebuggerFrameToInspectorFrame:function(e,t,n){var r=t.scopes.map(function(e){return{object:{type:"object",objectId:"scope:"+t.index+":"+e.index,className:"Object",description:"Object"},type:convert.v8ScopeTypeToString(e.type)}});n(null,{callFrameId:t.index.toString(),functionName:t.func.inferredName||t.func.name,location:{scriptId:convert.v8ScriptIdToInspectorId(t.func.scriptId),lineNumber:t.line,columnNumber:t.column},scopeChain:r,"this":convert.v8RefToInspectorObject(t.receiver)})},isScopeId:function(e){return SCOPE_ID_MATCHER.test(e)},resolveScopeId:function(e,t){var n=SCOPE_ID_MATCHER.exec(e);if(!n)throw new Error('Invalid scope id "'+e+'"');this._debuggerClient.request("scope",{number:Number(n[2]),frameNumber:Number(n[1])},function(e,n){e?t(e):t(null,n.object.ref)})}},exports.CallFramesProvider=CallFramesProvider;