function ScriptManager(e,t,n){var r=Object.create(ScriptManager.prototype,{_sources:{value:{},writable:!0},_isHidden:{value:e},_frontendClient:{value:t},_debuggerClient:{value:n}});return r._registerDebuggerEventHandlers(),r}var events=require("events"),async=require("async"),convert=require("./convert.js"),SOURCE_MAP_URL_REGEX=/\/\/[@#][ \t]sourceMappingURL=[ \t]*([^\s'"]*)[ \t]*$/m;ScriptManager.prototype=Object.create(events.EventEmitter.prototype,{mainAppScript:{value:null,writable:!0},_registerDebuggerEventHandlers:{value:function(){this._debuggerClient.on("afterCompile",this._onAfterCompile.bind(this))}},_onAfterCompile:{value:function(e){if(!e.script){console.log("Unexpected error: debugger emitted afterCompile eventwith no script data.");return}this.addScript(e.script)}},_isNodeInternal:{value:function(e){var t=/[\/\\]/.test(e);return!t}},_listAllSources:{value:function(){var e=this;return Object.keys(this._sources).map(function(n){return e._sources[n]})}},findScriptByID:{value:function(e){return this._sources[e]}},addScript:{value:function(e){function i(){if(n)return;this._frontendClient.sendEvent("Debugger.scriptParsed",r)}var t=e.name,n=this._isHidden(t)&&t!=this.mainAppScript,r=this._doAddScript(e,n);n||this._isNodeInternal(t)?i.call(this):this._getSourceMapUrl(e.id,function(s,o){s&&console.log("Warning: cannot parse SourceMap URL for script %s (id %d). %s",t,e.id,s),r.sourceMapURL=o,i.call(this)}.bind(this))}},_doAddScript:{value:function(e,t){var n=convert.v8NameToInspectorUrl(e.name),r={scriptId:String(e.id),url:n,startLine:e.lineOffset,startColumn:e.columnOffset},i={hidden:t,v8name:e.name,url:n};return this._sources[r.scriptId]=i,r}},_getSourceMapUrl:{value:function(e,t){async.waterfall([this._debuggerClient.getScriptSourceById.bind(this._debuggerClient,e),this._parseSourceMapUrlFromScriptSource.bind(this)],t)}},_parseSourceMapUrlFromScriptSource:{value:function(e,t){var n=SOURCE_MAP_URL_REGEX.exec(e);t(null,n?n[1]:undefined)}},reset:{value:function(){this._sources={}}}}),exports.ScriptManager=ScriptManager;