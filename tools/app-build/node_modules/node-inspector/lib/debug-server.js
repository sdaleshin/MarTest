function debugAction(e,t){var n=this._config;n.debugPort=getDebuggerPort(e.url,n.debugPort),t.sendfile(path.join(WEBROOT,"inspector.html"))}function overridesAction(e,t){t.sendfile(path.join(__dirname,"../front-end-node/Overrides.js"))}function getDebuggerPort(e,t){return parseInt((/\?port=(\d+)/.exec(e)||[null,t])[1],10)}function handleWebSocketConnection(e){this._createSession().join(e)}function handleServerListening(){this.emit("listening")}function handleServerError(e){this.emit("error",e)}function DebugServer(){}var http=require("http"),EventEmitter=require("events").EventEmitter,inherits=require("util").inherits,extend=require("util")._extend,path=require("path"),express=require("express"),io=require("socket.io"),Session=require("./session"),buildUrl=require("../index.js").buildInspectorUrl,WEBROOT=path.join(__dirname,"../front-end");inherits(DebugServer,EventEmitter),DebugServer.prototype.start=function(e){this._config=extend({},e);var t=express(),n=http.createServer(t);this._httpServer=n,t.get("/debug",debugAction.bind(this)),t.get("/node/Overrides.js",overridesAction),t.use(express.static(WEBROOT));var r=io.listen(n);r.configure(function(){r.set("transports",["websocket"]),r.set("log level",1)}),r.sockets.on("connection",handleWebSocketConnection.bind(this)),this.wsServer=r,n.on("listening",handleServerListening.bind(this)),n.on("error",handleServerError.bind(this)),n.listen(this._config.webPort,this._config.webHost)},DebugServer.prototype._createSession=function(){return Session.create(this._config.debugPort,this._config)},DebugServer.prototype.close=function(){this.wsServer&&(this.wsServer.close(),this.emit("close"))},DebugServer.prototype.address=function(){var e=this._httpServer.address(),t=this._config;return e.url=buildUrl(t.webHost,e.port,t.debugPort),e},exports.DebugServer=DebugServer;