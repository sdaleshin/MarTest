/*!
 * Module dependencies
 */

/*!
 * Inherit from mpromise
 */

/*!
 * Override event names for backward compatibility.
 */

/*!
 * expose
 */

function Promise(e){MPromise.call(this,e)}var MPromise=require("mpromise");Promise.prototype=Object.create(MPromise.prototype,{constructor:{value:Promise,enumerable:!1,writable:!0,configurable:!0}}),Promise.SUCCESS="complete",Promise.FAILURE="err",Promise.prototype.error=function(e){return e instanceof Error||(e=new Error(e)),this.reject(e)},Promise.prototype.resolve=function(e,t){return e?this.error(e):this.fulfill(t)},Promise.prototype.addBack=Promise.prototype.onResolve,Promise.prototype.complete=MPromise.prototype.fulfill,Promise.prototype.addCallback=Promise.prototype.onFulfill,Promise.prototype.addErrback=Promise.prototype.onReject,module.exports=Promise;