/*!
 * Module dependencies.
 */

/*!
 * Inherit from abstract Collection.
 */

/*!
 * Copy the collection methods and make them subject to queues
 */

/*!
 * Debug print helper
 */

/*!
 * Module exports.
 */

function NativeCollection(){this.collection=null,MongooseCollection.apply(this,arguments)}function print(e){var t=typeof e;return"function"===t||"undefined"===t?"":format(e)}function format(e,t){var n=utils.clone(e);if(n){if("Binary"===n.constructor.name)n="[object Buffer]";else if("ObjectID"===n.constructor.name){var r='ObjectId("'+n.toHexString()+'")';n={inspect:function(){return r}}}else if("Date"===n.constructor.name){var r='new Date("'+n.toUTCString()+'")';n={inspect:function(){return r}}}else if("Object"===n.constructor.name){var i=Object.keys(n),s=i.length,o;while(s--)o=i[s],n[o]&&("Binary"===n[o].constructor.name?n[o]="[object Buffer]":"Object"===n[o].constructor.name?n[o]=format(n[o],!0):"ObjectID"===n[o].constructor.name?function(e){var t='ObjectId("'+e[o].toHexString()+'")';e[o]={inspect:function(){return t}}}(n):"Date"===n[o].constructor.name?function(e){var t='new Date("'+e[o].toUTCString()+'")';e[o]={inspect:function(){return t}}}(n):Array.isArray(n[o])&&(n[o]=n[o].map(function(e){return format(e,!0)})))}if(t)return n}return require("util").inspect(n,!1,10,!0).replace(/\n/g,"").replace(/\s{2,}/g," ")}var MongooseCollection=require("../../collection"),Collection=require("mongodb").Collection,STATES=require("../../connectionstate"),utils=require("../../utils");NativeCollection.prototype.__proto__=MongooseCollection.prototype,NativeCollection.prototype.onOpen=function(){function t(t,n){t?e.conn.emit("error",t):(e.collection=n,MongooseCollection.prototype.onOpen.call(e))}var e=this;return e.opts.capped.size?e.conn.db.collection(e.name,function(n,r){if(n)return t(n);r.options(function(n,i){if(n)return t(n);if(i)if(i.capped)t(null,r);else{var s="A non-capped collection exists with the name: "+e.name+"\n\n"+" To use this collection as a capped collection, please "+"first convert it.\n"+" http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-Convertingacollectiontocapped";n=new Error(s),t(n)}else{var o=utils.clone(e.opts.capped);o.capped=!0,e.conn.db.createCollection(e.name,o,t)}})}):e.conn.db.collection(e.name,t)},NativeCollection.prototype.onClose=function(){MongooseCollection.prototype.onClose.call(this)};for(var i in Collection.prototype)(function(e){NativeCollection.prototype[e]=function(){if(this.buffer){this.addQueue(e,arguments);return}var t=this.collection,n=arguments,r=this,s=r.conn.base.options.debug;return s&&("function"==typeof s?s.apply(s,[r.name,e].concat(utils.args(n,0,n.length-1))):console.error("[0;36mMongoose:[0m %s.%s(%s) %s %s %s",r.name,e,print(n[0]),print(n[1]),print(n[2]),print(n[3]))),t[e].apply(t,n)}})(i);NativeCollection.prototype.getIndexes=NativeCollection.prototype.indexInformation,module.exports=NativeCollection;