/*!
 * Module dependencies.
 */

/*!
 * DivergentArrayError constructor.
 *
 * @inherits MongooseError
 */

/*!
 * Inherits from MongooseError.
 */

/*!
 * exports
 */

function DivergentArrayError(e){var t="For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  "+e.join("\n  ")+"\n"+"Use Model.update() to update these arrays instead.";MongooseError.call(this,t),Error.captureStackTrace(this,arguments.callee),this.name="DivergentArrayError"}var MongooseError=require("../error.js");DivergentArrayError.prototype.__proto__=MongooseError.prototype,module.exports=DivergentArrayError;