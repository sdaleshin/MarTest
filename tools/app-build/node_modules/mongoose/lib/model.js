/*!
 * Module dependencies.
 */

/*!
 * Inherits from Document.
 *
 * All Model.prototype features are available on
 * top level (non-sub) documents.
 */

/*!
 * Handles doc.save() callbacks
 */

/*!
 * Apply the operation to the delta (update) clause as
 * well as track versioning for our where clause.
 *
 * @param {Document} self
 * @param {Object} where
 * @param {Object} delta
 * @param {Object} data
 * @param {Mixed} val
 * @param {String} [operation]
 */

/*!
 * Compiles an update and where clause for a `val` with _atomics.
 *
 * @param {Document} self
 * @param {Object} where
 * @param {Object} delta
 * @param {Object} data
 * @param {Array} value
 */

/*!
 * Determine if array was populated with some form of filter and is now
 * being updated in a manner which could overwrite data unintentionally.
 *
 * @see https://github.com/LearnBoost/mongoose/issues/1334
 * @param {Document} doc
 * @param {String} path
 * @return {String|undefined}
 */

/*!
 * Give the constructor the ability to emit events.
 */

/*!
 * Connection instance the model uses.
 *
 * @property db
 * @receiver Model
 * @api public
 */

/*!
 * Collection the model uses.
 *
 * @property collection
 * @receiver Model
 * @api public
 */

/*!
 * Populates `docs`
 */

/*!
 * Retrieve the _id of `val` if a Document or Array of Documents.
 *
 * @param {Array|Document|Any} val
 * @return {Array|Document|Any}
 */

/*!
 * Assigns documents returned from a population query back
 * to the original document path.
 */

/*!
 * 1) Apply backwards compatible find/findOne behavior to sub documents
 *
 *    find logic:
 *      a) filter out non-documents
 *      b) remove _id from sub docs when user specified
 *
 *    findOne
 *      a) if no doc found, set to null
 *      b) remove _id from sub docs when user specified
 *
 * 2) Remove _ids when specified by users query.
 *
 * background:
 * _ids are left in the query even when user excludes them so
 * that population mapping can occur.
 */

/*!
 * Remove _id from `subdoc` if user specified "lean" query option
 */

/*!
 * Determine if `doc` is a document returned
 * by a populate query.
 */

/*!
 * Assign `vals` returned by mongo query to the `rawIds`
 * structure returned from utils.getVals() honoring
 * query sort order if specified by user.
 *
 * This can be optimized.
 *
 * Rules:
 *
 *   if the value of the path is not an array, use findOne rules, else find.
 *   for findOne the results are assigned directly to doc path (including null results).
 *   for find, if user specified sort order, results are assigned directly
 *   else documents are put back in original order of array if found in results
 *
 * @param {Array} rawIds
 * @param {Array} vals
 * @param {Boolean} sort
 * @api private
 */

/*!
 * Compiler utility.
 *
 * @param {String} name model name
 * @param {Schema} schema
 * @param {String} collectionName
 * @param {Connection} connection
 * @param {Mongoose} base mongoose instance
 */

/*!
 * Subclass this model with `conn`, `schema`, and `collection` settings.
 *
 * @param {Connection} conn
 * @param {Schema} [schema]
 * @param {String} [collection]
 * @return {Model}
 */

/*!
 * Module exports.
 */

function Model(e,t,n){Document.call(this,e,t,n)}function handleSave(e,t){return tick(function(r,i){if(r){t.$__.inserting&&(t.isNew=!0,t.emit("isNew",!0)),e.error(r),e=t=null;return}t.$__storeShard();var s;i?s=i.length?i.length:i:s=0;if(t.$__.version&&!t.$__.inserting){var o=VERSION_INC===(VERSION_INC&t.$__.version);t.$__.version=undefined;if(!(s>0)){e.error(new VersionError),e=t=null;return}if(o){var u=t.schema.options.versionKey,a=t.getValue(u)|0;t.setValue(u,a+1)}}t.emit("save",t,s),e.complete(t,s),e=t=null})}function operand(e,t,n,r,i,s){s||(s="$set"),n[s]||(n[s]={}),n[s][r.path]=i;if(!1===e.schema.options.versionKey)return;if(VERSION_ALL===(VERSION_ALL&e.$__.version))return;switch(s){case"$set":case"$unset":case"$pop":case"$pull":case"$pullAll":case"$push":case"$pushAll":case"$addToSet":break;default:return}"$push"==s||"$pushAll"==s||"$addToSet"==s?e.$__.version=VERSION_INC:/^\$p/.test(s)?e.increment():Array.isArray(i)?e.increment():/\.\d+\.|\.\d+$/.test(r.path)&&(e.$__.version=VERSION_WHERE)}function handleAtomics(e,t,n,r,i){if(n.$set&&n.$set[r.path])return;if("function"==typeof i.$__getAtomics){i.$__getAtomics().forEach(function(i){var s=i[0],o=i[1];operand(e,t,n,r,o,s)});return}var s=i._atomics,o=Object.keys(s),u=o.length,a,f;if(0===u)return isMongooseObject(i)?i=i.toObject({depopulate:1}):i.valueOf&&(i=i.valueOf()),operand(e,t,n,r,i);while(u--)f=o[u],a=s[f],isMongooseObject(a)?a=a.toObject({depopulate:1}):Array.isArray(a)?a=a.map(function(e){return isMongooseObject(e)?e.toObject({depopulate:1}):e}):a.valueOf&&(a=a.valueOf()),"$addToSet"===f&&(a={$each:a}),operand(e,t,n,r,a,f)}function checkDivergentArray(e,t,n){var r=e.populated(t,!0);if(!r&&e.$__.selected){var i=t.split(".")[0];if(e.$__.selected[i]&&e.$__.selected[i].$elemMatch)return i}if(!(r&&n instanceof MongooseArray))return;var s=r.options.match||r.options.options&&hasOwnProperty(r.options.options,"limit")||r.options.options&&r.options.options.skip||r.options.select&&(0===r.options.select._id||/\s?-_id\s?/.test(r.options.select));if(s){var o=n._atomics;if(0===Object.keys(o).length||o.$set||o.$pop)return t}}function populate(e,t,n,r){var i=n.select,s=n.match,o=n.path,u=e._getSchema(o),a;u&&u.caster&&(u=u.caster);var f=n.model&&n.model.modelName||n.model||u&&u.options.ref||e.modelName,l=e.db.model(f);n.model=l,Array.isArray(t)||(t=[t]);if(0===t.length||t.every(utils.isNullOrUndefined))return r();var c=[],h,p,d,v=t.length,m,g=0,y;for(h=0;h<v;h++){m=undefined,p=t[h],d=String(utils.getValue("_id",p)),y=!!p.$__,y&&!p.isModified(o)&&(m=p.populated(o));if(!m||Array.isArray(m)&&0===m.length)m=utils.getValue(o,p);m&&(m=convertTo_id(m),n._docs[d]=Array.isArray(m)?m.slice():m),c.push(m),y&&p.populated(o,n._docs[d],n)}var b=utils.array.flatten(c,function(e){return undefined!==e});if(0===b.length||b.every(utils.isNullOrUndefined))return r();s?s=utils.object.shallowCopy(s):s={},s._id||(s._id={$in:b});var w={};w.sort=n.options&&n.options.sort||undefined,w.excludeId=/\s?-_id\s?/.test(i)||i&&0===i._id,w.excludeId&&("string"==typeof i?i=i.replace(/\s?-_id\s?/g," "):(i=utils.object.shallowCopy(i),delete i._id)),n.options&&n.options.limit&&(n.options.limit=n.options.limit*v),l.find(s,i,n.options,function(e,i){if(e)return r(e);var s=n.options&&n.options.lean,u=i.length,a={},f={},l,h;for(var p=0;p<u;p++)h=i[p],l=String(utils.getValue("_id",h)),f[l]=h,a[l]=p,s||(h.$__.wasPopulated=!0);assignVals({rawIds:c,rawDocs:f,rawOrder:a,docs:t,path:o,options:w}),r()})}function convertTo_id(e){if(e instanceof Model)return e._id;if(Array.isArray(e)){for(var t=0;t<e.length;++t)e[t]instanceof Model&&(e[t]=e[t]._id);return e}return e}function assignVals(e){assignRawDocsToIdStructure(e.rawIds,e.rawDocs,e.rawOrder,e.options);var t=e.docs,n=e.path,r=e.rawIds,i=e.options;for(var s=0;s<t.length;++s)utils.setValue(n,r[s],t[s],function(e){return valueFilter(e,i)})}function valueFilter(e,t){if(Array.isArray(e)){var n=[];for(var r=0;r<e.length;++r){var i=e[r];if(!isDoc(i))continue;maybeRemoveId(i,t),n.push(i)}return n}return isDoc(e)?(maybeRemoveId(e,t),e):null}function maybeRemoveId(e,t){t.excludeId&&("function"==typeof e.setValue?e.setValue("_id",undefined):delete e._id)}function isDoc(e){if(null==e)return!1;var t=typeof e;return"string"==t?!1:"number"==t?!1:Buffer.isBuffer(e)?!1:"ObjectID"==e.constructor.name?!1:!0}function assignRawDocsToIdStructure(e,t,n,r,i){var s=[],o=r.sort&&e.length>1,u,a,f,l;for(var c=0;c<e.length;++c){l=e[c];if(Array.isArray(l)){assignRawDocsToIdStructure(l,t,n,r,!0),s.push(l);continue}if(null===l&&!o){s.push(l);continue}f=String(l),u=!1,i?(a=t[f],a?o?s[n[f]]=a:s.push(a):s.push(l)):s[c]=a=t[f]||null}e.length=0,s.length&&s.forEach(function(t,n){e[n]=t})}var Document=require("./document"),MongooseArray=require("./types/array"),MongooseBuffer=require("./types/buffer"),MongooseError=require("./error"),VersionError=MongooseError.VersionError,DivergentArrayError=MongooseError.DivergentArrayError,Query=require("./query"),Aggregate=require("./aggregate"),Schema=require("./schema"),Types=require("./schema/index"),utils=require("./utils"),hasOwnProperty=utils.object.hasOwnProperty,isMongooseObject=utils.isMongooseObject,EventEmitter=require("events").EventEmitter,merge=utils.merge,Promise=require("./promise"),assert=require("assert"),util=require("util"),tick=utils.tick,Query=require("./query.js"),VERSION_WHERE=1,VERSION_INC=2,VERSION_ALL=VERSION_WHERE|VERSION_INC;Model.prototype.__proto__=Document.prototype,Model.prototype.db,Model.prototype.collection,Model.prototype.modelName,Model.prototype.save=function(t){var n=new Promise(t),r=handleSave(n,this),i={};this.schema.options.safe&&(i.safe=this.schema.options.safe);if(this.isNew){var s=this.toObject({depopulate:1});if(!utils.object.hasOwnProperty(s||{},"_id"))return r(new Error("document must have an _id before saving"));this.$__version(!0,s),this.collection.insert(s,i,r),this.$__reset(),this.isNew=!1,this.emit("isNew",!1),this.$__.inserting=!0}else{this.$__.inserting=!1;var o=this.$__delta();if(o){if(o instanceof Error)return r(o);var u=this.$__where(o[0]);this.$__reset(),this.collection.update(u,o[1],i,r)}else this.$__reset(),r(null);this.emit("isNew",!1)}},Model.prototype.$__delta=function(){var e=this.$__dirty();if(!e.length&&VERSION_ALL!=this.$__.version)return;var t={},n={},r=e.length,i=[],s=0,o,u;for(;s<r;++s){var a=e[s],f=a.value,l=a.schema,c=checkDivergentArray(this,a.path,f);if(c){i.push(c);continue}if(i.length)continue;undefined===f?operand(this,t,n,a,1,"$unset"):null===f?operand(this,t,n,a,null):f._path&&f._atomics?handleAtomics(this,t,n,a,f):f._path&&Buffer.isBuffer(f)?(f=f.toObject(),operand(this,t,n,a,f)):(f=utils.clone(f,{depopulate:1}),operand(this,t,n,a,f))}return i.length?new DivergentArrayError(i):(this.$__.version&&this.$__version(t,n),[t,n])},Model.prototype.$__version=function(e,t){var n=this.schema.options.versionKey;if(!0===e){n&&this.setValue(n,t[n]=0);return}if(!this.isSelected(n))return;VERSION_WHERE===(VERSION_WHERE&this.$__.version)&&(e[n]=this.getValue(n)),VERSION_INC===(VERSION_INC&this.$__.version)&&(t.$inc||(t.$inc={}),t.$inc[n]=1)},Model.prototype.increment=function(){return this.$__.version=VERSION_ALL,this},Model.prototype.$__where=function(t){t||(t={});var n,r;if(this.$__.shardval){n=Object.keys(this.$__.shardval),r=n.length;for(var i=0;i<r;++i)t[n[i]]=this.$__.shardval[n[i]]}return t._id=this._doc._id,t},Model.prototype.remove=function(t){if(this.$__.removing)return this.$__.removing.addBack(t),this;var n=this.$__.removing=new Promise(t),r=this.$__where(),i=this,s={};return this.schema.options.safe&&(s.safe=this.schema.options.safe),this.collection.remove(r,s,tick(function(e){if(e){n.error(e),n=i=i.$__.removing=r=s=null;return}i.emit("remove",i),n.complete(i),n=i=r=s=null})),this},Model.prototype.model=function(t){return this.db.model(t)},Model.discriminator=function(t,n){if(n instanceof Schema){if(this.schema.discriminatorMapping&&!this.schema.discriminatorMapping.isRoot)throw new Error('Discriminator "'+t+'" can only be a discriminator of the root model');var r=this.schema.options.discriminatorKey;if(n.path(r))throw new Error('Discriminator "'+t+'" cannot have field with name "'+r+'"');(function(n,i){utils.merge(n,i);var s={};s[r]={type:String,"default":t},n.add(s),n.discriminatorMapping={key:r,value:t,isRoot:!1},i.options.collection&&(n.options.collection=i.options.collection),function(t,n){t=utils.clone(t),n=utils.clone(n),delete t.toJSON,delete t.toObject,delete n.toJSON,delete n.toObject;if(!utils.deepEqual(t,n))throw new Error("Discriminator options are not customizable (except toJSON & toObject)")}(n.options,i.options);var o=n.options.toJSON,u=n.options.toObject;n.options=utils.clone(i.options),o&&(n.options.toJSON=o),u&&(n.options.toObject=u),n.callQueue=i.callQueue.concat(n.callQueue),n._requiredpaths=undefined})(n,this.schema),this.discriminators||(this.discriminators={}),this.schema.discriminatorMapping||(this.schema.discriminatorMapping={key:r,value:null,isRoot:!0});if(this.discriminators[t])throw new Error('Discriminator with name "'+t+'" already exists');return this.discriminators[t]=this.db.model(t,n,this.collection.name),this.discriminators[t].prototype.__proto__=this.prototype,this.discriminators[t]}throw new Error("You must pass a valid discriminator Schema")};for(var i in EventEmitter.prototype)Model[i]=EventEmitter.prototype[i];Model.init=function(){this.schema.options.autoIndex&&this.ensureIndexes(),this.schema.emit("init",this)},Model.ensureIndexes=function(t){function o(e){i.emit("index",e),n.resolve(e)}function u(){var e=r.shift();if(!e)return o();var t=e[1];t.safe=s,i.collection.ensureIndex(e[0],t,tick(function(e){if(e)return o(e);u()}))}var n=new Promise(t),r=this.schema.indexes();if(!r.length)return process.nextTick(n.fulfill.bind(n)),n;var i=this,s=i.schema.options.safe;return u(),n},Model.schema,Model.db,Model.collection,Model.base,Model.discriminators,Model.remove=function(t,n){"function"==typeof t&&(n=t,t={});var r=new Query(t,{},this,this.collection);return r.remove(n)},Model.find=function(t,n,r,i){"function"==typeof t?(i=t,t={},n=null,r=null):"function"==typeof n?(i=n,n=null,r=null):"function"==typeof r&&(i=r,r=null);var s=new Query({},r,this,this.collection);return s.select(n),s.find(t,i)},Model.findById=function(t,n,r,i){return this.findOne({_id:t},n,r,i)},Model.findOne=function(t,n,r,i){"function"==typeof r?(i=r,r=null):"function"==typeof n?(i=n,n=null,r=null):"function"==typeof t&&(i=t,t={},n=null,r=null);var s=new Query({},r,this,this.collection);return s.select(n),s.findOne(t,i)},Model.count=function(t,n){"function"==typeof t&&(n=t,t={});var r=new Query({},{},this,this.collection);return r.count(t,n)},Model.distinct=function(t,n,r){var i=new Query({},{},this,this.collection);return"function"==typeof n&&(r=n,n={}),i.distinct(n,t,r)},Model.where=function(t,n){var r=(new Query({},{},this,this.collection)).find({});return r.where.apply(r,arguments)},Model.$where=function(){var t=(new Query({},{},this,this.collection)).find({});return t.$where.apply(t,arguments)},Model.findOneAndUpdate=function(e,t,n,r){if("function"==typeof n)r=n,n=null;else if(1===arguments.length){if("function"==typeof e){var i="Model.findOneAndUpdate(): First argument must not be a function.\n\n  "+this.modelName+".findOneAndUpdate(conditions, update, options, callback)\n"+"  "+this.modelName+".findOneAndUpdate(conditions, update, options)\n"+"  "+this.modelName+".findOneAndUpdate(conditions, update)\n"+"  "+this.modelName+".findOneAndUpdate(update)\n"+"  "+this.modelName+".findOneAndUpdate()\n";throw new TypeError(i)}t=e,e=undefined}var s;n&&n.fields&&(s=n.fields,n.fields=undefined);var o=new Query({},{},this,this.collection);return o.select(s),o.findOneAndUpdate(e,t,n,r)},Model.findByIdAndUpdate=function(e,t,n,r){var i;if(1===arguments.length){if("function"==typeof e){var s="Model.findByIdAndUpdate(): First argument must not be a function.\n\n  "+this.modelName+".findByIdAndUpdate(id, callback)\n"+"  "+this.modelName+".findByIdAndUpdate(id)\n"+"  "+this.modelName+".findByIdAndUpdate()\n";throw new TypeError(s)}return this.findOneAndUpdate({_id:e},undefined)}return i=utils.args(arguments,1),e&&e._id&&(e=e._id),e&&i.unshift({_id:e}),this.findOneAndUpdate.apply(this,i)},Model.findOneAndRemove=function(e,t,n){if(1===arguments.length&&"function"==typeof e){var r="Model.findOneAndRemove(): First argument must not be a function.\n\n  "+this.modelName+".findOneAndRemove(conditions, callback)\n"+"  "+this.modelName+".findOneAndRemove(conditions)\n"+"  "+this.modelName+".findOneAndRemove()\n";throw new TypeError(r)}"function"==typeof t&&(n=t,t=undefined);var i;t&&(i=t.select,t.select=undefined);var s=new Query({},{},this,this.collection);return s.select(i),s.findOneAndRemove(e,t,n)},Model.findByIdAndRemove=function(e,t,n){if(1===arguments.length&&"function"==typeof e){var r="Model.findByIdAndRemove(): First argument must not be a function.\n\n  "+this.modelName+".findByIdAndRemove(id, callback)\n"+"  "+this.modelName+".findByIdAndRemove(id)\n"+"  "+this.modelName+".findByIdAndRemove()\n";throw new TypeError(r)}return this.findOneAndRemove({_id:e},t,n)},Model.create=function(t,n){var r=new Promise,i;if(Array.isArray(t))i=t,"function"==typeof n&&r.onResolve(n);else{var s=arguments[arguments.length-1];"function"==typeof s?(r.onResolve(s),i=utils.args(arguments,0,arguments.length-1)):i=utils.args(arguments)}var o=i.length;if(0===o)return r.complete(),r;var u=this,a=[];return i.forEach(function(e,t){var n=new u(e);a[t]=n,n.save(function(e){if(e)return r.error(e);--o||r.complete.apply(r,a)})}),r},Model.update=function(t,n,r,i){var s=new Query({},{},this,this.collection);return s.update(t,n,r,i)},Model.mapReduce=function(t,n){var r=new Promise(n),i=this;if(!Model.mapReduce.schema){var s={noId:!0,noVirtualId:!0,strict:!1};Model.mapReduce.schema=new Schema({},s)}t.out||(t.out={inline:1}),t.map=String(t.map),t.reduce=String(t.reduce);if(t.query){var o=new Query(t.query);o.cast(this),t.query=o._conditions,o=undefined}return this.collection.mapReduce(null,null,t,function(e,t,n){if(e)return r.error(e);if(t.findOne&&t.mapReduce){var s=Model.compile("_mapreduce_"+t.collectionName,Model.mapReduce.schema,t.collectionName,i.db,i.base);return s._mapreduce=!0,r.fulfill(s,n)}r.fulfill(t,n)}),r},Model.geoNear=function(e,t,n){"function"==typeof t&&(n=t,t={});var r=new Promise(n);if(!e)return r.error(new Error("Must pass a near option to geoNear")),r;var i,s;if(Array.isArray(e)){if(e.length!=2)return r.error(new Error("If using legacy coordinates, must be an array of size 2 for geoNear")),r;i=e[0],s=e[1]}else{if(e.type!="Point"||!Array.isArray(e.coordinates))return r.error(new Error("Must pass either a legacy coordinate array or GeoJSON Point to geoNear")),r;i=e.coordinates[0],s=e.coordinates[1]}var o=this;return this.collection.geoNear(i,s,t,function(e,n){if(e)return r.error(e);if(t.lean)return r.fulfill(n.results,n.stats);var i=n.results.length;if(i==0)return r.fulfill(n.results,n.stats);var s=!1;for(var u=0;u<n.results.length;u++){var a=n.results[u].obj;n.results[u].obj=new o,n.results[u].obj.init(a,function(e){if(e&&!s)return s=!0,r.error(e);--i||r.fulfill(n.results,n.stats)})}}),r},Model.aggregate=function e(){var t=[].slice.call(arguments),e,n;return"function"==typeof t[t.length-1]&&(n=t.pop()),1===t.length&&util.isArray(t[0])?e=new Aggregate(t[0]):e=new Aggregate(t),e.bind(this),"undefined"==typeof n?e:e.exec(n)},Model.geoSearch=function(e,t,n){"function"==typeof t&&(n=t,t={});var r=new Promise(n);if(e==undefined||!utils.isObject(e))return r.error(new Error("Must pass conditions to geoSearch"));if(!t.near)return r.error(new Error("Must specify the near option in geoSearch"));if(!Array.isArray(t.near))return r.error(new Error("near option must be an array [x, y]"));t.search=e;var i=this;return this.collection.geoHaystackSearch(t.near[0],t.near[1],t,function(e,n){if(e||n.errmsg)return e||(e=new Error(n.errmsg)),n&&n.code!==undefined&&(e.code=n.code),r.error(e);if(t.lean)return r.fulfill(n.results,n.stats);var s=n.results.length,o=!1;for(var u=0;u<n.results.length;u++){var a=n.results[u];n.results[u]=new i,n.results[u].init(a,{},function(e){if(e&&!o)return o=!0,r.error(e);--s||!o&&r.fulfill(n.results,n.stats)})}}),r},Model.populate=function(e,t,n){function i(){var e=utils.args(arguments);process.nextTick(function(){r.resolve.apply(r,e)})}function a(t){if(t)return i(t);if(--s)return;i(null,e)}var r=new Promise(n),t=utils.populate(t),s=t.length;if(0===s)return i(null,e),r;var o=s,u;while(o--)u=t[o],populate(this,e,u,a);return r},Model._getSchema=function(t){var n=this.schema,r=n.path(t);return r?r:function i(e,t){var n=e.length+1,r,s;while(n--){s=e.slice(0,n).join("."),r=t.path(s);if(r){if(r.caster){if(r.caster instanceof Types.Mixed)return r.caster;if(n!==e.length&&r.schema)return"$"===e[n]?i(e.slice(n+1),r.schema):i(e.slice(n),r.schema)}return r}}}(t.split("."),n)},Model.compile=function(t,n,r,i,s){function a(e,t,n){if(!(this instanceof a))return new a(e,t,n);Model.call(this,e,t,n)}var o=!1!==n.options.versionKey;if(o&&!n.paths[n.options.versionKey]){var u={};u[n.options.versionKey]=Number,n.add(u)}a.base=s,a.modelName=t,a.__proto__=Model,a.prototype.__proto__=Model.prototype,a.model=Model.prototype.model,a.db=a.prototype.db=i,a.discriminators=a.prototype.discriminators=undefined,a.prototype.$__setSchema(n);var f={bufferCommands:n.options.bufferCommands,capped:n.options.capped};a.prototype.collection=i.collection(r,f);for(var l in n.methods)a.prototype[l]=n.methods[l];for(var l in n.statics)a[l]=n.statics[l];return a.schema=a.prototype.schema,a.options=a.prototype.options,a.collection=a.prototype.collection,a},Model.__subclass=function(t,n,r){var i=this,s=function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);i.call(this,e,t,n)};s.__proto__=i,s.prototype.__proto__=i.prototype,s.db=s.prototype.db=t;var o=n&&"string"!=typeof n?n:i.prototype.schema,u=o.options||{};r||(r=i.prototype.schema.get("collection")||utils.toCollectionName(i.modelName,u));var a={bufferCommands:o?u.bufferCommands:!0,capped:o&&u.capped};return s.prototype.collection=t.collection(r,a),s.collection=s.prototype.collection,s.init(),s},module.exports=exports=Model;