var assert=require("assert"),clone=require("../");describe("regexp-clone",function(){function e(e,t){assert.ok(e!==t),assert.equal(e.source,t.source)}function t(e){assert.ok(e.ignoreCase)}function n(e){assert.ok(e.global)}function r(e){assert.ok(e.multiline)}function i(n){var r=clone(n);e(n,r),t(n),t(r)}function s(t){var r=clone(t);e(t,r),n(t),n(r)}function o(t){var n=clone(t);e(t,n),r(t),r(n)}describe("literals",function(){it("insensitive flag",function(e){var t=/hello/i;i(t),e()}),it("global flag",function(e){var t=/hello/g;s(t),e()}),it("multiline flag",function(e){var t=/hello/m;o(t),e()}),it("no flags",function(t){var n=/hello/,r=clone(n);e(n,r),assert.ok(!n.insensitive),assert.ok(!n.global),assert.ok(!n.global),t()}),it("all flags",function(e){var t=/hello/gim;i(t),s(t),o(t),e()})}),describe("instances",function(){it("insensitive flag",function(e){var t=new RegExp("hello","i");i(t),e()}),it("global flag",function(e){var t=new RegExp("hello","g");s(t),e()}),it("multiline flag",function(e){var t=new RegExp("hello","m");o(t),e()}),it("no flags",function(t){var n=new RegExp("hmm"),r=clone(n);e(n,r),assert.ok(!n.insensitive),assert.ok(!n.global),assert.ok(!n.global),t()}),it("all flags",function(e){var t=new RegExp("hello","gim");i(t),s(t),o(t),e()})})});