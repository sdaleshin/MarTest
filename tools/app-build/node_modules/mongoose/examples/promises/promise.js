function cleanup(){Person.remove(function(){mongoose.disconnect()})}var async=require("async"),mongoose=require("../../lib");require("./person.js")();var Person=mongoose.model("Person"),data=[{name:"bill",age:25,birthday:(new Date).setFullYear((new Date).getFullYear()-25)},{name:"mary",age:30,birthday:(new Date).setFullYear((new Date).getFullYear()-30)},{name:"bob",age:21,birthday:(new Date).setFullYear((new Date).getFullYear()-21)},{name:"lilly",age:26,birthday:(new Date).setFullYear((new Date).getFullYear()-26)},{name:"alucard",age:1e3,birthday:(new Date).setFullYear((new Date).getFullYear()-1e3)}];mongoose.connect("mongodb://localhost/persons",function(e){if(e)throw e;async.each(data,function(e,t){Person.create(e,t)},function(e){var t=Person.find({age:{$lt:1e3}}).exec();t.addBack(function(){console.log("completed")}),t.addCallback(function(){console.log("Successful Completion!")}),t.addErrback(function(){console.log("Fail Boat")}),t.then(function(e){var t=e.map(function(e){return e._id});return Person.find({_id:{$nin:t}}).exec()}).then(function(e){console.log("Oldest person is: %s",e)}).then(cleanup)})});