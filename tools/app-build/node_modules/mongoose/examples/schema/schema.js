function slugGenerator(e){e=e||{};var t=e.key||"title";return function(n){n.path(t).set(function(e){return this.slug=e.toLowerCase().replace(/[^a-z0-9]/g,"").replace(/-+/g,""),e})}}var mongoose=require("../../lib"),Schema=mongoose.Schema,Comment=new Schema;Comment.add({title:{type:String,index:!0},date:Date,body:String,comments:[Comment]});var BlogPost=new Schema({title:{type:String,index:!0},slug:{type:String,lowercase:!0,trim:!0},date:Date,buf:Buffer,comments:[Comment],creator:Schema.ObjectId}),Person=new Schema({name:{first:String,last:String},email:{type:String,required:!0,index:{unique:!0,sparse:!0}},alive:Boolean});BlogPost.path("date").default(function(){return new Date}).set(function(e){return e=="now"?new Date:e}),BlogPost.pre("save",function(e,t){emailAuthor(t),e()}),BlogPost.methods.findCreator=function(e){return this.db.model("Person").findById(this.creator,e)},BlogPost.statics.findByTitle=function(e,t){return this.find({title:e},t)},BlogPost.methods.expressiveQuery=function(e,t,n){return this.find("creator",e).where("date").gte(t).run(n)},BlogPost.plugin(slugGenerator()),mongoose.model("BlogPost",BlogPost),mongoose.model("Person",Person);