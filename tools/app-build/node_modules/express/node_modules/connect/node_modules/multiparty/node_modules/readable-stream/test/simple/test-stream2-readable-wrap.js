// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function runTest(e,t,n){function l(){o=!0;while(o&&u-->0){var e=n();f.push(e),console.log("old.emit",u,o),r.emit("data",e),console.log("after emit",u,o)}u<=0&&(a=!0,console.log("old end",u,o),r.emit("end"))}function p(){assert(s),assert(a),assert.deepEqual(h,f)}testRuns++;var r=new EE,i=new Readable({highWaterMark:e,objectMode:t});assert.equal(i,i.wrap(r));var s=!1;i.on("end",function(){s=!0}),r.pause=function(){console.error("old.pause()"),r.emit("pause"),o=!1},r.resume=function(){console.error("old.resume()"),r.emit("resume"),l()};var o,u=10,a=!1,f=[],c=new Writable({highWaterMark:e*2,objectMode:t}),h=[];c._write=function(e,t,n){console.log("_write",e),h.push(e),setTimeout(n)},c.on("finish",function(){completedRuns++,p()}),i.pipe(c),l()}var common=require("../common"),assert=require("assert"),Readable=require("../../lib/_stream_readable"),Writable=require("../../lib/_stream_writable"),EE=require("events").EventEmitter,testRuns=0,completedRuns=0;runTest(100,!1,function(){return new Buffer(100)}),runTest(10,!1,function(){return new Buffer("xxxxxxxxxx")}),runTest(1,!0,function(){return{foo:"bar"}}),process.on("exit",function(){assert.equal(testRuns,completedRuns),console.log("ok")});