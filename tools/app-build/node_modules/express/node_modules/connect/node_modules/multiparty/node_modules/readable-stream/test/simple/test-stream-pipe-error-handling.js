// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var common=require("../common"),assert=require("assert"),Stream=require("../../").Stream;(function(){var t=new Stream,n=new Stream;t.pipe(n);var r=null;t.on("error",function(e){r=e});var i=new Error("This stream turned into bacon.");t.emit("error",i),assert.strictEqual(r,i)})(),function(){var t=new Stream,n=new Stream;t.pipe(n);var r=new Error("This stream turned into bacon."),i=null;try{t.emit("error",r)}catch(s){i=s}assert.strictEqual(i,r)}(),function(){function a(e){throw new Error("this should not happen")}var t=require("events").EventEmitter,n=Stream.Readable,r=Stream.Writable,i=new n,s=new r,o=!1,u=!1;process.on("exit",function(){assert(u),console.log("ok")}),i._read=function(){setTimeout(function(){assert(o),assert.throws(function(){s.emit("error",new Error("fail"))}),u=!0})},s.on("error",a),i.pipe(s),s.removeListener("error",a),o=!0}(),function(){function f(e){assert(!a),a=!0}var t=require("events").EventEmitter,n=Stream.Readable,r=Stream.Writable,i=new n,s=new r,o=!1,u=!1,a=!1;process.on("exit",function(){assert(u),console.log("ok")}),i._read=function(){setTimeout(function(){assert(o),s.emit("error",new Error("fail")),u=!0})},s.on("error",f),s._write=function(){},i.pipe(s),s.removeListener("error",function(){}),o=!0}();