(function(){var e,t,n,r,i,s,o=this;t=require("../lib/charset").preferredCharsets,this["Should not return a charset when no charset is provided"]=function(e){return e.deepEqual(t("*",[]),[]),e.done()},this["Should not return a charset when no charset is acceptable"]=function(e){return e.deepEqual(t("ISO-8859-1",["utf-8"]),[]),e.done()},this["Should not return a charset with q = 0"]=function(e){return e.deepEqual(t("utf-8;q=0",["utf-8"]),[]),e.done()},r=function(e){return o["Should return "+e.selected+" for accept-charset header "+e.accept+" with provided charset "+e.provided]=function(n){return n.deepEqual(t(e.accept,e.provided),e.selected),n.done()}},n=[{accept:"utf-8",provided:["utf-8"],selected:["utf-8"]},{accept:"*",provided:["utf-8"],selected:["utf-8"]},{accept:"utf-8",provided:["utf-8","ISO-8859-1"],selected:["utf-8"]},{accept:"utf-8, ISO-8859-1",provided:["utf-8"],selected:["utf-8"]},{accept:"utf-8;q=0.8, ISO-8859-1",provided:["utf-8","ISO-8859-1"],selected:["ISO-8859-1","utf-8"]},{accept:"utf-8;q=0.8, ISO-8859-1",provided:null,selected:["ISO-8859-1","utf-8"]}];for(i=0,s=n.length;i<s;i++)e=n[i],r(e)}).call(this);