function parseAcceptCharset(e){return e.split(",").map(function(e){return parseCharset(e.trim())}).filter(function(e){return e&&e.q>0})}function parseCharset(e){var t=e.match(/^\s*(\S+?)\s*(?:;(.*))?$/);if(!t)return null;var n=t[1],r=1;if(t[2]){var i=t[2].split(";");for(var s=0;s<i.length;s++){var o=i[s].trim().split("=");if(o[0]==="q"){r=parseFloat(o[1]);break}}}return{charset:n,q:r}}function getCharsetPriority(e,t){return(t.filter(function(t){return specify(e,t)}).sort(function(e,t){return e.q===t.q?0:e.q>t.q?-1:1})[0]||{q:0}).q}function specify(e,t){if(t.charset==="*"||t.charset===e)return t}function preferredCharsets(e,t){return e=parseAcceptCharset(e||""),t?t.map(function(t){return[t,getCharsetPriority(t,e)]}).filter(function(e){return e[1]>0}).sort(function(e,t){return e[1]===t[1]?0:e[1]>t[1]?-1:1}).map(function(e){return e[0]}):e.sort(function(e,t){return e.q<t.q?1:-1}).map(function(e){return e.charset})}module.exports=preferredCharsets,preferredCharsets.preferredCharsets=preferredCharsets;