/***********************************************************************

  A JavaScript tokenizer / parser / beautifier / compressor.
  https://github.com/mishoo/UglifyJS2

  -------------------------------- (C) ---------------------------------

                           Author: Mihai Bazon
                         <mihai.bazon@gmail.com>
                       http://mihai.bazon.net/blog

  Distributed under the BSD license:

    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:

        * Redistributions of source code must retain the above
          copyright notice, this list of conditions and the following
          disclaimer.

        * Redistributions in binary form must reproduce the above
          copyright notice, this list of conditions and the following
          disclaimer in the documentation and/or other materials
          provided with the distribution.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.

 ***********************************************************************/

function array_to_hash(e){var t=Object.create(null);for(var n=0;n<e.length;++n)t[e[n]]=!0;return t}function slice(e,t){return Array.prototype.slice.call(e,t||0)}function characters(e){return e.split("")}function member(e,t){for(var n=t.length;--n>=0;)if(t[n]==e)return!0;return!1}function find_if(e,t){for(var n=0,r=t.length;n<r;++n)if(e(t[n]))return t[n]}function repeat_string(e,t){if(t<=0)return"";if(t==1)return e;var n=repeat_string(e,t>>1);return n+=n,t&1&&(n+=e),n}function DefaultsError(e,t){this.msg=e,this.defs=t}function defaults(e,t,n){e===!0&&(e={});var r=e||{};if(n)for(var i in r)if(r.hasOwnProperty(i)&&!t.hasOwnProperty(i))throw new DefaultsError("`"+i+"` is not a supported option",t);for(var i in t)t.hasOwnProperty(i)&&(r[i]=e&&e.hasOwnProperty(i)?e[i]:t[i]);return r}function merge(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function noop(){}function push_uniq(e,t){e.indexOf(t)<0&&e.push(t)}function string_template(e,t){return e.replace(/\{(.+?)\}/g,function(e,n){return t[n]})}function remove(e,t){for(var n=e.length;--n>=0;)e[n]===t&&e.splice(n,1)}function mergeSort(e,t){function n(e,n){var r=[],i=0,s=0,o=0;while(i<e.length&&s<n.length)t(e[i],n[s])<=0?r[o++]=e[i++]:r[o++]=n[s++];return i<e.length&&r.push.apply(r,e.slice(i)),s<n.length&&r.push.apply(r,n.slice(s)),r}function r(e){if(e.length<=1)return e;var t=Math.floor(e.length/2),i=e.slice(0,t),s=e.slice(t);return i=r(i),s=r(s),n(i,s)}return e.length<2?e.slice():r(e)}function set_difference(e,t){return e.filter(function(e){return t.indexOf(e)<0})}function set_intersection(e,t){return e.filter(function(e){return t.indexOf(e)>=0})}function makePredicate(e){function s(e){if(e.length==1)return t+="return str === "+JSON.stringify(e[0])+";";t+="switch(str){";for(var n=0;n<e.length;++n)t+="case "+JSON.stringify(e[n])+":";t+="return true}return false;"}e instanceof Array||(e=e.split(" "));var t="",n=[];e:for(var r=0;r<e.length;++r){for(var i=0;i<n.length;++i)if(n[i][0].length==e[r].length){n[i].push(e[r]);continue e}n.push([e[r]])}if(n.length>3){n.sort(function(e,t){return t.length-e.length}),t+="switch(str.length){";for(var r=0;r<n.length;++r){var o=n[r];t+="case "+o[0].length+":",s(o)}t+="}"}else s(e);return new Function("str",t)}function Dictionary(){this._values=Object.create(null),this._size=0}var MAP=function(){function e(e,s,o){function l(){var l=s(e[f],f),c=l instanceof i;return c&&(l=l.v),l instanceof n?(l=l.v,l instanceof r?a.push.apply(a,o?l.v.slice().reverse():l.v):a.push(l)):l!==t&&(l instanceof r?u.push.apply(u,o?l.v.slice().reverse():l.v):u.push(l)),c}var u=[],a=[],f;if(e instanceof Array){if(o){for(f=e.length;--f>=0;)if(l())break;u.reverse(),a.reverse()}else for(f=0;f<e.length;++f)if(l())break}else for(f in e)if(e.hasOwnProperty(f)&&l())break;return a.concat(u)}function n(e){this.v=e}function r(e){this.v=e}function i(e){this.v=e}e.at_top=function(e){return new n(e)},e.splice=function(e){return new r(e)},e.last=function(e){return new i(e)};var t=e.skip={};return e}();Dictionary.prototype={set:function(e,t){return this.has(e)||++this._size,this._values["$"+e]=t,this},add:function(e,t){return this.has(e)?this.get(e).push(t):this.set(e,[t]),this},get:function(e){return this._values["$"+e]},del:function(e){return this.has(e)&&(--this._size,delete this._values["$"+e]),this},has:function(e){return"$"+e in this._values},each:function(e){for(var t in this._values)e(this._values[t],t.substr(1))},size:function(){return this._size},map:function(e){var t=[];for(var n in this._values)t.push(e(this._values[n],n.substr(1)));return t}};