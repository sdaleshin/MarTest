function findLinesMatching(e){return es.through(function(t){function s(){return es.mapSync(function(t){return n++,~t.indexOf(e)?n+": "+t:undefined})}function o(){return es.through(function(t){r.push(t)},function(){if(r.length){var n={file:t,lines:r};i.emit("data",n)}this.emit("end")})}var n=0,r=[],i=this;fs.createReadStream(t.fullPath,{encoding:"utf-8"}).pipe(es.split("\n")).pipe(s()).pipe(o())})}var readdirp=require(".."),util=require("util"),fs=require("fs"),path=require("path"),Stream=require("stream"),tap=require("tap-stream"),es=require("event-stream");console.log('grepping for "arguments"'),readdirp({root:path.join(__dirname),fileFilter:"*.js"}).pipe(findLinesMatching("arguments")).pipe(es.mapSync(function(e){return"\n\n"+e.file.path+"\n	"+e.lines.join("\n	")})).pipe(process.stdout);