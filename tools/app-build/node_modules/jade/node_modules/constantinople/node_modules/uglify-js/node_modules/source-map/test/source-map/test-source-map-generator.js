/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

define(["require","exports","module","../../lib/source-map/source-map-generator","../../lib/source-map/source-map-consumer","../../lib/source-map/source-node","./util"],function(e,t,n){var r=e("../../lib/source-map/source-map-generator").SourceMapGenerator,i=e("../../lib/source-map/source-map-consumer").SourceMapConsumer,s=e("../../lib/source-map/source-node").SourceNode,o=e("./util");t["test some simple stuff"]=function(e,t){var n=new r({file:"foo.js",sourceRoot:"."});e.ok(!0)},t["test JSON serialization"]=function(e,t){var n=new r({file:"foo.js",sourceRoot:"."});e.equal(n.toString(),JSON.stringify(n))},t["test adding mappings (case 1)"]=function(e,t){var n=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){n.addMapping({generated:{line:1,column:1}})})},t["test adding mappings (case 2)"]=function(e,t){var n=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){n.addMapping({generated:{line:1,column:1},source:"bar.js",original:{line:1,column:1}})})},t["test adding mappings (case 3)"]=function(e,t){var n=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){n.addMapping({generated:{line:1,column:1},source:"bar.js",original:{line:1,column:1},name:"someToken"})})},t["test adding mappings (invalid)"]=function(e,t){var n=new r({file:"generated-foo.js",sourceRoot:"."});e.throws(function(){n.addMapping({})}),e.throws(function(){n.addMapping({generated:{line:1,column:1},original:{line:1,column:1}})})},t["test that the correct mappings are being generated"]=function(e,t){var n=new r({file:"min.js",sourceRoot:"/the/root"});n.addMapping({generated:{line:1,column:1},original:{line:1,column:1},source:"one.js"}),n.addMapping({generated:{line:1,column:5},original:{line:1,column:5},source:"one.js"}),n.addMapping({generated:{line:1,column:9},original:{line:1,column:11},source:"one.js"}),n.addMapping({generated:{line:1,column:18},original:{line:1,column:21},source:"one.js",name:"bar"}),n.addMapping({generated:{line:1,column:21},original:{line:2,column:3},source:"one.js"}),n.addMapping({generated:{line:1,column:28},original:{line:2,column:10},source:"one.js",name:"baz"}),n.addMapping({generated:{line:1,column:32},original:{line:2,column:14},source:"one.js",name:"bar"}),n.addMapping({generated:{line:2,column:1},original:{line:1,column:1},source:"two.js"}),n.addMapping({generated:{line:2,column:5},original:{line:1,column:5},source:"two.js"}),n.addMapping({generated:{line:2,column:9},original:{line:1,column:11},source:"two.js"}),n.addMapping({generated:{line:2,column:18},original:{line:1,column:21},source:"two.js",name:"n"}),n.addMapping({generated:{line:2,column:21},original:{line:2,column:3},source:"two.js"}),n.addMapping({generated:{line:2,column:28},original:{line:2,column:10},source:"two.js",name:"n"}),n=JSON.parse(n.toString()),t.assertEqualMaps(e,n,t.testMap)},t["test that source content can be set"]=function(e,t){var n=new r({file:"min.js",sourceRoot:"/the/root"});n.addMapping({generated:{line:1,column:1},original:{line:1,column:1},source:"one.js"}),n.addMapping({generated:{line:2,column:1},original:{line:1,column:1},source:"two.js"}),n.setSourceContent("one.js","one file content"),n=JSON.parse(n.toString()),e.equal(n.sources[0],"one.js"),e.equal(n.sources[1],"two.js"),e.equal(n.sourcesContent[0],"one file content"),e.equal(n.sourcesContent[1],null)},t["test .fromSourceMap"]=function(e,t){var n=r.fromSourceMap(new i(t.testMap));t.assertEqualMaps(e,n.toJSON(),t.testMap)},t["test .fromSourceMap with sourcesContent"]=function(e,t){var n=r.fromSourceMap(new i(t.testMapWithSourcesContent));t.assertEqualMaps(e,n.toJSON(),t.testMapWithSourcesContent)},t["test applySourceMap"]=function(e,t){var n=new s(null,null,null,[new s(2,0,"fileX","lineX2\n"),"genA1\n",new s(2,0,"fileY","lineY2\n"),"genA2\n",new s(1,0,"fileX","lineX1\n"),"genA3\n",new s(1,0,"fileY","lineY1\n")]),o=n.toStringWithSourceMap({file:"fileA"}).map;o.setSourceContent("fileX","lineX1\nlineX2\n"),o=o.toJSON(),n=new s(null,null,null,["gen1\n",new s(1,0,"fileA","lineA1\n"),new s(2,0,"fileA","lineA2\n"),new s(3,0,"fileA","lineA3\n"),new s(4,0,"fileA","lineA4\n"),new s(1,0,"fileB","lineB1\n"),new s(2,0,"fileB","lineB2\n"),"gen2\n"]);var u=n.toStringWithSourceMap({file:"fileGen"}).map;u.setSourceContent("fileB","lineB1\nlineB2\n"),u=u.toJSON(),n=new s(null,null,null,["gen1\n",new s(2,0,"fileX","lineA1\n"),new s(2,0,"fileA","lineA2\n"),new s(2,0,"fileY","lineA3\n"),new s(4,0,"fileA","lineA4\n"),new s(1,0,"fileB","lineB1\n"),new s(2,0,"fileB","lineB2\n"),"gen2\n"]);var a=n.toStringWithSourceMap({file:"fileGen"}).map;a.setSourceContent("fileX","lineX1\nlineX2\n"),a.setSourceContent("fileB","lineB1\nlineB2\n"),a=a.toJSON();var f=r.fromSourceMap(new i(u));f.applySourceMap(new i(o));var l=f.toJSON();t.assertEqualMaps(e,l,a)},t["test sorting with duplicate generated mappings"]=function(e,t){var n=new r({file:"test.js"});n.addMapping({generated:{line:3,column:0},original:{line:2,column:0},source:"a.js"}),n.addMapping({generated:{line:2,column:0}}),n.addMapping({generated:{line:2,column:0}}),n.addMapping({generated:{line:1,column:0},original:{line:1,column:0},source:"a.js"}),t.assertEqualMaps(e,n.toJSON(),{version:3,file:"test.js",sources:["a.js"],names:[],mappings:"AAAA;A;AACA"})},t["test ignore duplicate mappings."]=function(e,t){var n={file:"min.js",sourceRoot:"/the/root"},i,s,o={generated:{line:1,column:0}},u={generated:{line:2,column:2}};i=new r(n),s=new r(n),i.addMapping(o),i.addMapping(o),s.addMapping(o),t.assertEqualMaps(e,i.toJSON(),s.toJSON()),i.addMapping(u),i.addMapping(o),s.addMapping(u),t.assertEqualMaps(e,i.toJSON(),s.toJSON());var a={generated:{line:1,column:0},original:{line:11,column:0},source:"srcMapping1.js"},f={generated:{line:2,column:2},original:{line:11,column:0},source:"srcMapping2.js"};i=new r(n),s=new r(n),i.addMapping(a),i.addMapping(a),s.addMapping(a),t.assertEqualMaps(e,i.toJSON(),s.toJSON()),i.addMapping(f),i.addMapping(a),s.addMapping(f),t.assertEqualMaps(e,i.toJSON(),s.toJSON());var l={generated:{line:1,column:0},original:{line:11,column:0},source:"fullMapping1.js",name:"fullMapping1"},c={generated:{line:2,column:2},original:{line:11,column:0},source:"fullMapping2.js",name:"fullMapping2"};i=new r(n),s=new r(n),i.addMapping(l),i.addMapping(l),s.addMapping(l),t.assertEqualMaps(e,i.toJSON(),s.toJSON()),i.addMapping(c),i.addMapping(l),s.addMapping(c),t.assertEqualMaps(e,i.toJSON(),s.toJSON())},t["test github issue #72, check for duplicate names or sources"]=function(e,t){var n=new r({file:"test.js"});n.addMapping({generated:{line:1,column:1},original:{line:2,column:2},source:"a.js",name:"foo"}),n.addMapping({generated:{line:3,column:3},original:{line:4,column:4},source:"a.js",name:"foo"}),t.assertEqualMaps(e,n.toJSON(),{version:3,file:"test.js",sources:["a.js"],names:["foo"],mappings:"CACEA;;GAEEA"})}});